<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Database on I'm OWenT</title><link>//owent.net/tags/database.html</link><description>Recent content in Database on I'm OWenT</description><generator>Hugo</generator><language>zh-cn</language><copyright>&lt;a rel="license" href="https://github.com/owent/blog-hugo/blob/master/LICENSE.md">&lt;img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png" />&lt;/a></copyright><lastBuildDate>Sat, 07 Nov 2020 19:27:08 +0000</lastBuildDate><atom:link href="//owent.net/tags/database/index.xml" rel="self" type="application/rss+xml"/><item><title>Amazon Aurora DB存储引擎论文阅读小记</title><link>//owent.net/2020/2008.html</link><pubDate>Sat, 07 Nov 2020 19:27:08 +0000</pubDate><guid>//owent.net/2020/2008.html</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>前段时间接触到腾讯云的一个新数据库产品 &lt;a href="https://cloud.tencent.com/product/cynosdb">CynosDB&lt;/a> 是基于 &lt;a href="https://aws.amazon.com/rds/aurora/">Amazon Aurora&lt;/a> 数据库的Paper实现的。我比较感兴趣就来看看它和之前看过的 &lt;a href="https://ai.google/research/pubs/pub39966" title="Spanner: Google's Globally-Distributed Database">Spanner&lt;/a> 之类有什么不同，也许部分设计也能用在我们游戏业务的服务器中。它的主要的创新点在于重新设计了binlog和存储的部分，所以我也主要就看了两篇Paper： &lt;a href="https://media.amazonwebservices.com/blog/2017/aurora-design-considerations-paper.pdf" title="Amazon Aurora: Design Considerations for High Throughput Cloud-Native Relational Databases">《Amazon Aurora - Design Considerations for High Throughput Cloud-Native Relational Databases》&lt;/a> 是一个整体性质的介绍和概述； &lt;a href="https://dl.acm.org/doi/abs/10.1145/3183713.3196937" title="Amazon Aurora: On Avoiding Distributed Consensus for I/Os, Commits, and Membership Changes">《Amazon Aurora: On Avoiding Distributed Consensus for I/Os,Commits, and Membership Changes》&lt;/a> 是对其重点部分的存储服务的。&lt;/p></description></item><item><title>Anna（支持任意扩展和超高性能的KV数据库系统）阅读笔记</title><link>//owent.net/2019/1905.html</link><pubDate>Sun, 21 Apr 2019 11:38:16 +0000</pubDate><guid>//owent.net/2019/1905.html</guid><description>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>年前被同事安利了这个分布式最终一致性的存储系统 &lt;a href="http://db.cs.berkeley.edu/jmh/papers/anna_ieee18.pdf">Anna&lt;/a> 。初略看了一眼Paper，似乎很是牛X。说是支持任意规模的扩展，并且性能不低于 &lt;a href="https://github.com/fastio/pedis">pedis&lt;/a>。于是抽空来看看并了解下这套系统的设计特点和这种夸张的单机性能和扩展性的来源。&lt;/p>
&lt;h1 id="主流分布式kvs的比较">主流分布式KVS的比较&lt;/h1>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">系统名词&lt;/th>
 &lt;th style="text-align: left">扩容设计&lt;/th>
 &lt;th style="text-align: left">内存模型&lt;/th>
 &lt;th style="text-align: left">针对单个Key的一致性策略&lt;/th>
 &lt;th style="text-align: left">针对多个Key一致性策略&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">Masstree&lt;/td>
 &lt;td style="text-align: left">多核&lt;/td>
 &lt;td style="text-align: left">共享内存&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Linearizability">&lt;strong>线性(Linearizable)&lt;/strong>&lt;/a>&lt;/td>
 &lt;td style="text-align: left">无&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Bw-tree&lt;/td>
 &lt;td style="text-align: left">多核&lt;/td>
 &lt;td style="text-align: left">共享内存&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Linearizability">&lt;strong>线性(Linearizable)&lt;/strong>&lt;/a>&lt;/td>
 &lt;td style="text-align: left">无&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">PALM&lt;/td>
 &lt;td style="text-align: left">多核&lt;/td>
 &lt;td style="text-align: left">共享内存&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Linearizability">&lt;strong>线性(Linearizable)&lt;/strong>&lt;/a>&lt;/td>
 &lt;td style="text-align: left">无&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">MICA&lt;/td>
 &lt;td style="text-align: left">多核&lt;/td>
 &lt;td style="text-align: left">共享内存&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Linearizability">&lt;strong>线性(Linearizable)&lt;/strong>&lt;/a>&lt;/td>
 &lt;td style="text-align: left">无&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Redis&lt;/td>
 &lt;td style="text-align: left">单核&lt;/td>
 &lt;td style="text-align: left">N/A&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Linearizability">&lt;strong>线性(Linearizable)&lt;/strong>&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Serializability">&lt;strong>串行化(Serializable)&lt;/strong>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">COPS, Bolt-on&lt;/td>
 &lt;td style="text-align: left">分布式&lt;/td>
 &lt;td style="text-align: left">消息队列&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Eventual_consistency">&lt;strong>最终一致性(Eventual)&lt;/strong>&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Causal_consistency">&lt;strong>因果一致性(Causal)&lt;/strong>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Bayou&lt;/td>
 &lt;td style="text-align: left">分布式&lt;/td>
 &lt;td style="text-align: left">消息队列&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Eventual_consistency">&lt;strong>最终一致性(Eventual)&lt;/strong>&lt;/a>, 单调读/写, &lt;a href="http://www.dbms2.com/2010/05/01/ryw-read-your-writes-consistency/">&lt;strong>Read Your Writes&lt;/strong>&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Eventual_consistency">&lt;strong>最终一致性(Eventual)&lt;/strong>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Dynamo&lt;/td>
 &lt;td style="text-align: left">分布式&lt;/td>
 &lt;td style="text-align: left">消息队列&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Linearizability">&lt;strong>线性(Linearizable)&lt;/strong>&lt;/a>, &lt;a href="https://en.wikipedia.org/wiki/Eventual_consistency">&lt;strong>最终一致性(Eventual)&lt;/strong>&lt;/a>&lt;/td>
 &lt;td style="text-align: left">无&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Cassandra&lt;/td>
 &lt;td style="text-align: left">分布式&lt;/td>
 &lt;td style="text-align: left">消息队列&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Linearizability">&lt;strong>线性(Linearizable)&lt;/strong>&lt;/a>, &lt;a href="https://en.wikipedia.org/wiki/Eventual_consistency">&lt;strong>最终一致性(Eventual)&lt;/strong>&lt;/a>&lt;/td>
 &lt;td style="text-align: left">无&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">PNUTS&lt;/td>
 &lt;td style="text-align: left">分布式&lt;/td>
 &lt;td style="text-align: left">消息队列&lt;/td>
 &lt;td style="text-align: left">线性写, 单调读&lt;/td>
 &lt;td style="text-align: left">无&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">CouchDB&lt;/td>
 &lt;td style="text-align: left">分布式&lt;/td>
 &lt;td style="text-align: left">消息队列&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Eventual_consistency">&lt;strong>最终一致性(Eventual)&lt;/strong>&lt;/a>&lt;/td>
 &lt;td style="text-align: left">无&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Voldemort&lt;/td>
 &lt;td style="text-align: left">分布式&lt;/td>
 &lt;td style="text-align: left">消息队列&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Linearizability">&lt;strong>线性(Linearizable)&lt;/strong>&lt;/a>, &lt;a href="https://en.wikipedia.org/wiki/Eventual_consistency">&lt;strong>最终一致性(Eventual)&lt;/strong>&lt;/a>&lt;/td>
 &lt;td style="text-align: left">无&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">HBase&lt;/td>
 &lt;td style="text-align: left">分布式&lt;/td>
 &lt;td style="text-align: left">消息队列&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Linearizability">&lt;strong>线性(Linearizable)&lt;/strong>&lt;/a>&lt;/td>
 &lt;td style="text-align: left">无&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Riak&lt;/td>
 &lt;td style="text-align: left">分布式&lt;/td>
 &lt;td style="text-align: left">消息队列&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Eventual_consistency">&lt;strong>最终一致性(Eventual)&lt;/strong>&lt;/a>&lt;/td>
 &lt;td style="text-align: left">无&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">DocumentDB&lt;/td>
 &lt;td style="text-align: left">分布式&lt;/td>
 &lt;td style="text-align: left">消息队列&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Eventual_consistency">&lt;strong>最终一致性(Eventual)&lt;/strong>&lt;/a>, &lt;a href="https://www.allthingsdistributed.com/2007/12/eventually_consistent.html">&lt;strong>Session&lt;/strong>&lt;/a>, &lt;a href="http://pbs.cs.berkeley.edu/">&lt;strong>Bounded Staleness&lt;/strong>&lt;/a>, &lt;a href="https://en.wikipedia.org/wiki/Linearizability">&lt;strong>线性(Linearizable)&lt;/strong>&lt;/a>&lt;/td>
 &lt;td style="text-align: left">无&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Memcached&lt;/td>
 &lt;td style="text-align: left">多核&amp;amp;分布式&lt;/td>
 &lt;td style="text-align: left">共享内存&amp;amp;消息队列&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Linearizability">&lt;strong>线性(Linearizable)&lt;/strong>&lt;/a>&lt;/td>
 &lt;td style="text-align: left">无&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">MongoDB&lt;/td>
 &lt;td style="text-align: left">多核&amp;amp;分布式&lt;/td>
 &lt;td style="text-align: left">共享内存&amp;amp;消息队列&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Linearizability">&lt;strong>线性(Linearizable)&lt;/strong>&lt;/a>&lt;/td>
 &lt;td style="text-align: left">无&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">H-Store&lt;/td>
 &lt;td style="text-align: left">多核&amp;amp;分布式&lt;/td>
 &lt;td style="text-align: left">消息队列&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Linearizability">&lt;strong>线性(Linearizable)&lt;/strong>&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Serializability">&lt;strong>串行化(Serializable)&lt;/strong>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">ScyllaDB&lt;/td>
 &lt;td style="text-align: left">多核&amp;amp;分布式&lt;/td>
 &lt;td style="text-align: left">消息队列&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Linearizability">&lt;strong>线性(Linearizable)&lt;/strong>&lt;/a>, &lt;a href="https://en.wikipedia.org/wiki/Eventual_consistency">&lt;strong>最终一致性(Eventual)&lt;/strong>&lt;/a>&lt;/td>
 &lt;td style="text-align: left">无&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Anna&lt;/td>
 &lt;td style="text-align: left">多核&amp;amp;分布式&lt;/td>
 &lt;td style="text-align: left">消息队列&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://en.wikipedia.org/wiki/Eventual_consistency">&lt;strong>最终一致性(Eventual)&lt;/strong>&lt;/a>, &lt;a href="https://en.wikipedia.org/wiki/Eventual_consistency">&lt;strong>最终一致性(Eventual)&lt;/strong>&lt;/a>, Item Cut, Writes Follow Reads, 单调读/写, &lt;a href="http://www.dbms2.com/2010/05/01/ryw-read-your-writes-consistency/">&lt;strong>Read Your Writes&lt;/strong>&lt;/a>, &lt;a href="https://en.wikipedia.org/wiki/PRAM_consistency">&lt;strong>PRAM&lt;/strong>&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://jepsen.io/consistency/models/read-committed">&lt;strong>Read Committed&lt;/strong>&lt;/a>, &lt;a href="https://jepsen.io/consistency/models/read-uncommitted">&lt;strong>Read Uncommitted&lt;/strong>&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>一致性说明:&lt;/p></description></item><item><title>Google去中心化分布式系统论文三件套(Percolator、Spanner、F1)读后感</title><link>//owent.net/2019/1902.html</link><pubDate>Thu, 31 Jan 2019 22:49:50 +0000</pubDate><guid>//owent.net/2019/1902.html</guid><description>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>之前看过 &lt;a href="https://read.douban.com/ebook/10179010/">《大规模分布式存储系统：原理解析与架构实战》&lt;/a> ，这个系统设计还是挺有意思的，里面提及了Google的一整套系统都有论文，而且现在已经进化到下一代支持分布式跨行事务的关系型数据库系统了。所以一直很想抽时间看看Google的那套去中心化并且可以平行扩容的分布式系统和数据库的论文。之前一些计划中的我自己的项目的优化项都差不多完成了，这段时间就陆陆续续的看完了这三篇Paper，可怜我的渣渣英语，所以看得比较慢。&lt;/p></description></item><item><title>非常帅气的Linq to sql</title><link>//owent.net/2011/447.html</link><pubDate>Thu, 02 Jun 2011 10:57:03 +0000</pubDate><guid>//owent.net/2011/447.html</guid><description>&lt;p>Linq是.NET 3里新增的东西，我在软件工程课程设计里初步应用到一点，而且主要用在Lambda表达式上，今天算是在好奇心驱动下尝试了一下在数据库方面的应用。&lt;/p></description></item></channel></rss>