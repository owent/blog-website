<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Couroutine on I'm OWenT</title><link>//owent.net/tags/couroutine.html</link><description>Recent content in Couroutine on I'm OWenT</description><generator>Hugo</generator><language>zh-cn</language><copyright>&lt;a rel="license" href="https://github.com/owent/blog-hugo/blob/master/LICENSE.md">&lt;img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png" />&lt;/a></copyright><lastBuildDate>Tue, 14 Jun 2016 17:40:29 +0000</lastBuildDate><atom:link href="//owent.net/tags/couroutine/index.xml" rel="self" type="application/rss+xml"/><item><title>boost.context-1.61版本的设计模型变化</title><link>//owent.net/2016/1270.html</link><pubDate>Tue, 14 Jun 2016 17:40:29 +0000</pubDate><guid>//owent.net/2016/1270.html</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>之前写了个C++的协程框架&lt;a href="https://github.com/owent/libcopp">libcopp&lt;/a>，底层使用的是boost.context实现，然后剥离了对boost的依赖。然而这样意味着我必须时常跟进&lt;a href="http://www.boost.org/doc/libs/1_61_0/libs/context/doc/html/index.html">boost.context&lt;/a>的更新。&lt;/p>
&lt;p>顺带提一下这个协程库已经在我们线上服务器版本中使用了。&lt;/p>
&lt;p>从最初的boost版本（我忘了从哪个版本开始了）一直到1.60版本，&lt;a href="http://www.boost.org/doc/libs/1_61_0/libs/context/doc/html/index.html">boost.context&lt;/a>的变化都不大，都只是补全一些新的架构和体系结构，还有就是修复一些小细节的BUG，再就是增加了对valgrind的支持（之前写过一个&lt;a href="//owent.net/2015/1194.html">Merge记录&lt;/a>提到过）。新增的功能也只有&lt;a href="http://www.boost.org/doc/libs/1_61_0/libs/context/doc/html/context/ecv1.html">execution_context&lt;/a>(现在叫execution_context_v1)，这个东西我的&lt;a href="https://github.com/owent/libcopp">libcopp&lt;/a>里其实包含了这个功能，并且本身做得比它要功能丰富，所以没有接入的必要。另外在1.60版本的时候尝试使用Windows里的fiber（当然默认是关闭的），在1.61版本里被移除了。这些细节都不是特别重要，主要还是1.61版本的变化。&lt;/p></description></item></channel></rss>