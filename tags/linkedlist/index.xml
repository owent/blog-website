<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linkedlist on I'm OWenT</title><link>//owent.net/tags/linkedlist.html</link><description>Recent content in Linkedlist on I'm OWenT</description><generator>Hugo</generator><language>zh-cn</language><copyright>&lt;a rel="license" href="https://github.com/owent/blog-hugo/blob/master/LICENSE.md">&lt;img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png" />&lt;/a></copyright><lastBuildDate>Tue, 09 Mar 2021 19:19:45 +0000</lastBuildDate><atom:link href="//owent.net/tags/linkedlist/index.xml" rel="self" type="application/rss+xml"/><item><title>[Rust] 实现一个线程安全且迭代器可以保存的链表</title><link>//owent.net/2021/2102.html</link><pubDate>Tue, 09 Mar 2021 19:19:45 +0000</pubDate><guid>//owent.net/2021/2102.html</guid><description>&lt;h2 id="背景">背景&lt;/h2>
&lt;p>今年有个想法，重新设计 &lt;a href="https://github.com/atframework/libatbus">libatbus&lt;/a> 然后用 &lt;a href="https://www.rust-lang.org/">Rust&lt;/a> 实现出来，然后可以加入一些云原生的支持。这需要一个定时器模块，我看了下 &lt;a href="https://www.rust-lang.org/">Rust&lt;/a> 现有的几种定时器的实现，大多是基于堆或树的结构的，没有找到jiffies定时器的实现，所以想自己实现一个算了。这个定时器的实现又需要类似 C++ 的 &lt;code>std::list::iterator&lt;/code> 的 &lt;strong>插入和删除某个迭代器对其他迭代器没有影响&lt;/strong> 的特性，但是 &lt;a href="https://www.rust-lang.org/">Rust&lt;/a> 的数据结构都不是这种设计模型。所以就决定自己写一个吧。&lt;/p></description></item></channel></rss>