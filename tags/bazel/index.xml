<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bazel on I'm OWenT</title><link>//owent.net/tags/bazel.html</link><description>Recent content in Bazel on I'm OWenT</description><generator>Hugo</generator><language>zh-cn</language><copyright>&lt;a rel="license" href="https://github.com/owent/blog-hugo/blob/master/LICENSE.md">&lt;img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png" />&lt;/a></copyright><lastBuildDate>Mon, 14 Feb 2022 20:36:45 +0000</lastBuildDate><atom:link href="//owent.net/tags/bazel/index.xml" rel="self" type="application/rss+xml"/><item><title>记录一些bazel适配用编译选项</title><link>//owent.net/2022/2202.html</link><pubDate>Mon, 14 Feb 2022 20:36:45 +0000</pubDate><guid>//owent.net/2022/2202.html</guid><description>&lt;p>之前搞 &lt;a href="https://github.com/open-telemetry/opentelemetry-cpp">opentelemetry-cpp&lt;/a> 的时候接触了下 &lt;a href="https://bazel.build/">bazel&lt;/a> 构建系统。这玩意儿用起来有一点坑，特别是使用自定义编译环境的时候。&lt;/p>
&lt;p>在使用我自己编译的很新版本的 &lt;a href="https://github.com/owent-utils/bash-shell/tree/main/GCC%20Installer">GCC&lt;/a> 和 &lt;a href="https://github.com/owent-utils/bash-shell/tree/main/LLVM%26Clang%20Installer">clang+libc++&lt;/a> 的时候，涉及对libssp的检测和 &lt;code>LD_LIBRARY_PATH&lt;/code> 环境变量在 &lt;a href="https://bazel.build/">bazel&lt;/a> 中各个步骤中的传递，这里记录一下适配脚本。&lt;/p></description></item></channel></rss>