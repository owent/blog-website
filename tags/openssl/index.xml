<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>openssl on I'm OWenT</title><link>//owent.net/tags/openssl.html</link><description>Recent content in openssl on I'm OWenT</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>admin@owent.net (OWenT)</managingEditor><webMaster>admin@owent.net (OWenT)</webMaster><copyright>&lt;a rel="license" href="https://github.com/owent/blog-hugo/blob/master/LICENSE.md">&lt;img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png" />&lt;/a></copyright><lastBuildDate>Sun, 12 Dec 2021 15:23:00 +0000</lastBuildDate><atom:link href="//owent.net/tags/openssl/index.xml" rel="self" type="application/rss+xml"/><item><title>适配Boringssl和OpenSSL 3.0</title><link>//owent.net/2021/2110.html</link><pubDate>Sun, 12 Dec 2021 15:23:00 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2021/2110.html</guid><description>前言 openssl 3.0发布好一阵子了，我的 atframe_utils 其实也挺早前就完成了对 openssl 3.0 和 boringssl 的适配。但是由于懒，一直没写这篇文章。在升级 [openssl] 3.0 和 boringssl 还是碰到了一些问题的，有</description></item><item><title>近期对libatapp的一些优化调整(增加服务发现和连接管理,支持yaml等)</title><link>//owent.net/2020/2007.html</link><pubDate>Sun, 04 Oct 2020 15:43:17 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2020/2007.html</guid><description>最近给 libatapp 增加了一系列改造，非常多且琐碎，这里简单记录下吧。 首先是重构了配置管理。原来是手写在代码里的，因为原来上层的 libatbus 是不依赖 protobuf 的，现在 既然</description></item><item><title>Rust玩具-企业微信机器人通用服务</title><link>//owent.net/2019/1901.html</link><pubDate>Thu, 03 Jan 2019 17:08:50 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2019/1901.html</guid><description>新玩具-企业微信机器人 这个机器人其实蛮久前就做好了，现在才写了点分享出来。 最近企业微信不断地开放了机器人的接口，所以我想想拿来做一些开发工具</description></item><item><title>Rust的第二次接触-写个小服务器程序</title><link>//owent.net/2018/1809.html</link><pubDate>Wed, 12 Sep 2018 12:29:50 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2018/1809.html</guid><description>JUST PRACTICE 蛮久前入门了一下 Rust 语言。它的设计模型非常地吸引C/C++的开发者。但是学习语言嘛还是要练习一下，之前也用它给我们项目写了个命令行小工具。</description></item><item><title>理解和适配AEAD加密套件</title><link>//owent.net/2018/1808.html</link><pubDate>Sun, 01 Jul 2018 20:49:50 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2018/1808.html</guid><description>什么是AEAD 按照维基百科的说法。AEAD的全称是Authenticated encryption (AE) and authenticated encryption with associated data (AEAD, variant of AE)。也就是带附加数据的加密和验证算法。</description></item></channel></rss>