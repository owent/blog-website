<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Function on I'm OWenT</title><link>//owent.net/tags/function.html</link><description>Recent content in Function on I'm OWenT</description><generator>Hugo</generator><language>zh-cn</language><copyright>&lt;a rel="license" href="https://github.com/owent/blog-hugo/blob/master/LICENSE.md">&lt;img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png" />&lt;/a></copyright><lastBuildDate>Tue, 03 Jun 2014 20:55:44 +0000</lastBuildDate><atom:link href="//owent.net/tags/function/index.xml" rel="self" type="application/rss+xml"/><item><title>再议 C++ 11 Lambda表达式</title><link>//owent.net/2014/1060.html</link><pubDate>Tue, 03 Jun 2014 20:55:44 +0000</pubDate><guid>//owent.net/2014/1060.html</guid><description>&lt;h2 id="目录">目录&lt;/h2>
&lt;h2 id="c-的lambda表达式">C++ 的Lambda表达式&lt;/h2>
&lt;p>C++ 11 标准发布，各大编译器都开始支持里面的各种新特性，其中一项比较有意思的就是lambda表达式。&lt;/p>
&lt;h2 id="语法规则">语法规则&lt;/h2>
&lt;p>C++ 11 Lambda表达式的四种声明方式&lt;/p></description></item><item><title>std和boost的function与bind实现剖析</title><link>//owent.net/2013/938.html</link><pubDate>Thu, 28 Nov 2013 22:01:30 +0000</pubDate><guid>//owent.net/2013/938.html</guid><description>&lt;p>用过std和boost的function对象和bind函数的童鞋们都知道这玩意用起来腰不酸了，腿不疼了，心情也舒畅了。先上一个简单得示例：&lt;/p>
&lt;pre>&lt;code class="language-cpp">std::string str;
std::function&amp;lt;bool()&amp;gt; func = std::bind(&amp;amp;std::string::at, &amp;amp;str);
bool is_empty = func();
&lt;/code>&lt;/pre>
&lt;p>但是这是怎么做到的呢？看完源码以后，你会发现这里面有着一些很巧妙的设计。&lt;/p></description></item><item><title>C++ 新特性学习（四） — Bind和Function</title><link>//owent.net/2012/536.html</link><pubDate>Fri, 10 Feb 2012 09:52:37 +0000</pubDate><guid>//owent.net/2012/536.html</guid><description>&lt;p>绑定函数是我认为C++新标准里第二有用的库了
绑定库的使用环境是：&lt;/p>
&lt;ul>
&lt;li>GCC-C++ 4.3 及以上&lt;/li>
&lt;li>Visual Studio 2008 SP1 及以上&lt;/li>
&lt;li>BOOST 1.25及以上（其中function是1.16及以上）&lt;/li>
&lt;/ul>
&lt;p>先来看一段代码&lt;/p></description></item></channel></rss>