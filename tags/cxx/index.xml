<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cxx on I&#39;m OWenT</title><link>//owent.net/tags/cxx.html</link><description>Recent content in cxx on I&#39;m OWenT</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>admin@owent.net (OWenT)</managingEditor><webMaster>admin@owent.net (OWenT)</webMaster><lastBuildDate>Mon, 04 Mar 2019 20:38:00 +0000</lastBuildDate><atom:link href="//owent.net/tags/cxx/index.xml" rel="self" type="application/rss+xml"/><item><title>C&#43;&#43;20 Coroutine</title><link>//owent.net/2019/1904.html</link><pubDate>Mon, 04 Mar 2019 20:38:00 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2019/1904.html</guid><description>前言 最近的新闻里 C++20 已经确认的内容里已经有了协程组件，之前都是粗略看过这个协程草案。最近抽时间更加系统性的看了下接入和实现细节。 我的测试代码都</description></item><item><title>2018年的新通用伪随机数算法(xoshiro / xoroshiro)的C&#43;&#43;(head only)实现</title><link>//owent.net/2018/1810.html</link><pubDate>Thu, 18 Oct 2018 13:43:31 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2018/1810.html</guid><description>前段时间看到说Lua 5.4用了一种新的通用随机数算法，替换掉本来内部使用的CRT的随机数引擎。我看了一下大致的实现，CPU和空间复杂度任然保</description></item><item><title>可执行文件压缩</title><link>//owent.net/2018/1805.html</link><pubDate>Tue, 24 Apr 2018 10:58:05 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2018/1805.html</guid><description>前言 最近看Rust相关东西的时候看到一篇关于压缩可执行文件的文章。压缩可执行文件对嵌入式开发特别有用，但是延伸一下用来减少我们游戏行业里预编</description></item><item><title>C&#43;&#43;的backtrace</title><link>//owent.net/2018/1801.html</link><pubDate>Mon, 08 Jan 2018 17:55:00 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2018/1801.html</guid><description>开始之前 很多语言的log模块都有一个功能，就是在打log的时候能够追溯调用栈，有的时候对查bug能有点帮助。之前我也想过给我们的log模块加</description></item></channel></rss>