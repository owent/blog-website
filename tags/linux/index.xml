<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on I'm OWenT</title><link>//owent.net/tags/linux.html</link><description>Recent content in Linux on I'm OWenT</description><generator>Hugo</generator><language>zh-cn</language><copyright>&lt;a rel="license" href="https://github.com/owent/blog-hugo/blob/master/LICENSE.md">&lt;img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png" />&lt;/a></copyright><lastBuildDate>Tue, 09 May 2017 11:17:55 +0000</lastBuildDate><atom:link href="//owent.net/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>GCC 7和LLVM+Clang+libc++abi 4.0的构建脚本</title><link>//owent.net/2017/1431.html</link><pubDate>Tue, 09 May 2017 11:17:55 +0000</pubDate><guid>//owent.net/2017/1431.html</guid><description>&lt;p>之前的版本发完，有空来更新一下之前的gcc和llvm+clang工具链的编译脚本了。其实GCC 7是才release没多久但是llvm 4.0发布其实有一段时间了。&lt;/p></description></item><item><title>libatbus的几个藏得很深的bug</title><link>//owent.net/2017/1411.html</link><pubDate>Sun, 23 Apr 2017 23:48:54 +0000</pubDate><guid>//owent.net/2017/1411.html</guid><description>&lt;p>在写这篇文章前，我突然想到以前流行了一段时间的服务器面试题：当一个BUG只有几百万分之一的概率会出现，怎么办？这个问题在这个BUG里只是毛毛雨而已，因为这次的BUG的&lt;strong>出现概率是夸张的三亿分之一&lt;/strong>。&lt;/p></description></item><item><title>接入letsencrypt+全面启用HTTP/2</title><link>//owent.net/2016/1253.html</link><pubDate>Sat, 07 May 2016 15:10:43 +0000</pubDate><guid>//owent.net/2016/1253.html</guid><description>&lt;p>之前我的域名只有owent.net和www.owent.net买了SSL证书，现在有&lt;a href="https://letsencrypt.org/">letsencrypt&lt;/a>可以拿到免费的SSL签证，就稍微花了点时间把我的域名的其他部分接入了&lt;a href="https://letsencrypt.org/">letsencrypt&lt;/a>签证系统。另外根据其他人的一些配置建议，提高了HTTPS的安全性配置和性能配置（主要是缓存）。另外原本我的blog就已经启用了spdy，然而现在新版本的&lt;a href="http://nginx.org/">nginx&lt;/a>（&lt;a href="http://nginx.org/en/CHANGES-1.10">1.10&lt;/a>）已经release，原先的spdy模块被取消，新增了http/2模块。但是直接换nginx掉包是不行滴（后面有说原因），所以顺带自己处理了一下HTTP/2和nginx新版本的问题。&lt;/p>
&lt;p>并且也对公司里的域名和webserver也这么搞了一下。全面启用HTTPS。&lt;/p></description></item><item><title>libatbus基本功能及单元测试终于写完啦</title><link>//owent.net/2016/1214.html</link><pubDate>Fri, 19 Feb 2016 12:44:53 +0000</pubDate><guid>//owent.net/2016/1214.html</guid><description>&lt;h2 id="libatbus">&lt;a href="https://github.com/atframework/libatbus">libatbus&lt;/a>&lt;/h2>
&lt;p>经过茫茫长时间的编写+过年在家无聊补充和修正单元测试，再加上这两天的整理，终于把以前的这个关于服务器通信中间件的基本功能和相应的单元测试完成啦。还是可以热烈庆祝一下的。&lt;/p></description></item><item><title>小记最近踩得两个C++坑</title><link>//owent.net/2015/1189.html</link><pubDate>Sat, 25 Jul 2015 14:53:44 +0000</pubDate><guid>//owent.net/2015/1189.html</guid><description>&lt;h1 id="小记最近踩得两个c坑">小记最近踩得两个C++坑&lt;/h1>
&lt;p>记一下最近踩得两个C++独有的暗坑，其中一个和ABI相关。第二个坑其实之前研究过，但是没有实例，这次算是碰到了个典型的实例。&lt;/p>
&lt;h2 id="坑一常量引用失效">坑一：常量引用失效&lt;/h2>
&lt;p>在项目中碰到的实例的大致流程是:&lt;/p></description></item><item><title>LLVM + Clang + Libcxx + Libcxxabi 工具链编译</title><link>//owent.net/2014/1101.html</link><pubDate>Fri, 12 Sep 2014 19:07:03 +0000</pubDate><guid>//owent.net/2014/1101.html</guid><description>&lt;p>LLVM和Clang工具链的生成配置文件写得比较搓，所以略微麻烦，另外这个脚本没有经过多环境测试，不保证在其他Linux发行版里正常使用。&lt;/p>
&lt;p>&lt;strong>如果第一次执行出现安装失败，可以再执行一次。llvm的安装脚本问题多多&lt;/strong>&lt;/p></description></item><item><title>捣鼓一个协程库</title><link>//owent.net/2014/1000.html</link><pubDate>Wed, 05 Mar 2014 21:52:49 +0000</pubDate><guid>//owent.net/2014/1000.html</guid><description>&lt;p>今年准备安安心心写一个协程库。一方面是觉得协程挺有意思，另一方面也是因为C/C++在这方面没有一个非常权威的解决方案。
按照我自己风格还是喜欢C++，所以协程库定名为 libcopp 。
源码托管在 github: &lt;a href="https://github.com/owent/libcopp">https://github.com/owent/libcopp&lt;/a>
镜像托管 &lt;a href="http://git.oschina.net/owent/distinctionpp">http://git.oschina.net/owent/distinctionpp&lt;/a>&lt;/p></description></item><item><title>C++又一坑:动态链接库中的全局变量</title><link>//owent.net/2014/962.html</link><pubDate>Sat, 04 Jan 2014 17:30:32 +0000</pubDate><guid>//owent.net/2014/962.html</guid><description>&lt;p>前几天我们项目的日志系统出现了一点问题，但是一直没有时间去深究。
昨天在同事的帮助下，无意中猜了一种可能性，结果还真被我猜中了，于是今天就特别研究了一下，记录下来。&lt;/p></description></item><item><title>Lnmp yum 安装脚本 (for CentOS)</title><link>//owent.net/2013/740.html</link><pubDate>Mon, 15 Apr 2013 09:50:29 +0000</pubDate><guid>//owent.net/2013/740.html</guid><description>&lt;p>心情大好，给VPS升级了一下系统，然后自己配了LNMP安装脚本，用yum源安装的话更新比较方便点哈
​​这个过程挺麻烦啊，所以果断要记下来，以防以后要用到
如果是其他系统的话，几个配置路径和软件源地址还有yum指令替换掉，应该就可以了&lt;/p></description></item><item><title>ARM 交叉编译环境搭建</title><link>//owent.net/2013/738.html</link><pubDate>Thu, 11 Apr 2013 17:55:04 +0000</pubDate><guid>//owent.net/2013/738.html</guid><description>&lt;p>最近研究了一下ARM的交叉编译环境搭建，太麻烦了必须作一下记录啊。
前两个方法比较简单一点，关键是淫家Google帮你弄好了大部分功能&lt;/p>
&lt;h2 id="方案一利用android-ndk--jni">方案一：（利用Android ndk + jni）&lt;/h2>
&lt;p>使用Android NDK的第一步当然是下载Android NDK啦。
&lt;a href="http://developer.android.com/tools/sdk/ndk/index.html">http://developer.android.com/tools/sdk/ndk/index.html&lt;/a>
使用jni的话，还必须下载相应的Android SDK
&lt;a href="http://developer.android.com/sdk/index.html">http://developer.android.com/sdk/index.html&lt;/a>
下载完后可以使用 $ANDROID_SDK_ROOT/sdk/tools/android update sdk –no-ui 来更新SDK包
附注：ANDROID_SDK_ROOT指代Android SDK根目录，NDK_ROOT指代Android NDK根目录。下同。
为了方便可以把$ANDROID_SDK_ROOT/sdk/tools:$ANDROID_SDK_ROOT/sdk/platform-tools:$NDK_ROOT 加到环境变量PATH里去
另外,Android 如果要命令行编译，需要ant和ant扩展，需要安装 Android 依赖的32位库
大致上是 glibc.i686 libzip.i686 libzip-devel.i686 libstdc++.i686 ant ant-* jdk
其中 libc.i686 libzip.i686 libzip-devel.i686 libstdc++.i686 ant ant-* 可以用 yum install或apt-get install 安装
jdk最好是官网下一个rpm包安装 rpm -ivh *.rpm&lt;/p></description></item><item><title>Linux 编译安装 GCC 4.8</title><link>//owent.net/2013/730.html</link><pubDate>Tue, 26 Mar 2013 10:01:33 +0000</pubDate><guid>//owent.net/2013/730.html</guid><description>&lt;h1 id="linux-编译安装-gcc-48">Linux 编译安装 GCC 4.8&lt;/h1>
&lt;p>详见: &lt;a href="https://www.owent.net/2013/730.html">Linux 编译安装 GCC 4.8&lt;/a>&lt;/p>
&lt;p>GCC4.8发布啦，这个脚本在之前4.7的基础上做了点改进，移除一些过时的组件,增加了检测不到时自动下载源码包&lt;/p></description></item><item><title>[记录]虚拟硬盘的压缩|磁盘写零</title><link>//owent.net/2013/722.html</link><pubDate>Tue, 26 Feb 2013 15:19:20 +0000</pubDate><guid>//owent.net/2013/722.html</guid><description>&lt;p>用虚拟机软件虚拟出来的硬盘文件会随着使用而变大，因为磁盘碎片的产生，这个文件里也有很多的没用的空闲空间，为了节省空间，可以对虚拟硬盘文件进行压缩。&lt;/p></description></item><item><title>Linux编译安装GCC 4.7</title><link>//owent.net/2012/584.html</link><pubDate>Sat, 07 Apr 2012 10:25:18 +0000</pubDate><guid>//owent.net/2012/584.html</guid><description>&lt;h1 id="linux编译安装gcc-47">Linux编译安装GCC 4.7&lt;/h1>
&lt;p>详见: &lt;a href="https://www.owent.net/2012/584.html">Linux编译安装GCC 4.7&lt;/a>&lt;/p>
&lt;h4 id="准备环境及依赖项">准备环境及依赖项&lt;/h4>
&lt;ol>
&lt;li>支持 ISO C90 的编译器&lt;/li>
&lt;li>用于创建Ada编译器的GNAT&lt;/li>
&lt;li>支持POSIX的shell或GNU bash&lt;/li>
&lt;li>POSIX或SVR4的 awk工具&lt;/li>
&lt;li>GNU binutils&lt;/li>
&lt;li>gzip 版本1.2.4及以上 （可由GNU镜像列表 &lt;a href="http://www.gnu.org/prep/ftp.html">http://www.gnu.org/prep/ftp.html&lt;/a> 或自动选择最佳镜像 &lt;a href="http://ftpmirror.gnu.org">http://ftpmirror.gnu.org&lt;/a> 下载 ）&lt;/li>
&lt;li>bzip2 版本 1.0.2及以上 （此处可下载 &lt;a href="http://www.bzip.org/">http://www.bzip.org/&lt;/a>）&lt;/li>
&lt;li>GNU make 工具 版本3.80及以上 （可由GNU镜像列表 &lt;a href="http://www.gnu.org/prep/ftp.html">http://www.gnu.org/prep/ftp.html&lt;/a> 或自动选择最佳镜像 &lt;a href="http://ftpmirror.gnu.org">http://ftpmirror.gnu.org&lt;/a> 下载 ）&lt;/li>
&lt;li>GNU tar工具 版本1.14及以上 （可由GNU镜像列表 &lt;a href="http://www.gnu.org/prep/ftp.html">http://www.gnu.org/prep/ftp.html&lt;/a> 或自动选择最佳镜像 &lt;a href="http://ftpmirror.gnu.org">http://ftpmirror.gnu.org&lt;/a> 下载 ）&lt;/li>
&lt;li>perl 版本5.6.1及以上 （此处可下载 &lt;a href="http://www.perl.org/">http://www.perl.org/&lt;/a>）&lt;/li>
&lt;li>jar或zip和unzip工具 （此处可下载 &lt;a href="http://www.info-zip.org">http://www.info-zip.org&lt;/a>)&lt;/li>
&lt;li>gmp库 版本4.3.2及以上 （可由GNU镜像列表 &lt;a href="http://www.gnu.org/prep/ftp.html">http://www.gnu.org/prep/ftp.html&lt;/a> 或自动选择最佳镜像 &lt;a href="http://ftpmirror.gnu.org">http://ftpmirror.gnu.org&lt;/a> 下载 ）&lt;/li>
&lt;li>mpfr库 版本2.4.2及以上 （可由GNU镜像列表 &lt;a href="http://www.gnu.org/prep/ftp.html">http://www.gnu.org/prep/ftp.html&lt;/a> 或自动选择最佳镜像 &lt;a href="http://ftpmirror.gnu.org">http://ftpmirror.gnu.org&lt;/a> 下载 ）&lt;/li>
&lt;li>mpc库 版本0.8.1及以上 （可由GNU镜像列表 &lt;a href="http://www.gnu.org/prep/ftp.html">http://www.gnu.org/prep/ftp.html&lt;/a> 或自动选择最佳镜像 &lt;a href="http://ftpmirror.gnu.org">http://ftpmirror.gnu.org&lt;/a> 下载 ）&lt;/li>
&lt;li>ppl库 版本0.11及以上 （此处可下载 &lt;a href="http://www.cs.unipr.it/ppl/Download/">http://www.cs.unipr.it/ppl/Download/&lt;/a>）&lt;/li>
&lt;li>isl 版本 0.10 （可由GNU镜像列表 &lt;a href="http://www.gnu.org/prep/ftp.html">http://www.gnu.org/prep/ftp.html&lt;/a> 或自动选择最佳镜像 &lt;a href="http://ftpmirror.gnu.org">http://ftpmirror.gnu.org&lt;/a> 中gcc目录中的infrastructure目录下载 ）&lt;/li>
&lt;li>cloog-ppl 版本0.15 或cloog 版本0.16(注意不能使用更高版本) （此处可下载 &lt;a href="http://cloog.org/">http://cloog.org/&lt;/a> ）&lt;/li>
&lt;/ol>
&lt;h6 id="我编译的环境">我编译的环境&lt;/h6>
&lt;p>&lt;strong>系统&lt;/strong>：&lt;/p></description></item><item><title>Linux 和 Windows PowerShell 常用工具/命令 记录</title><link>//owent.net/2011/482.html</link><pubDate>Fri, 19 Aug 2011 11:16:55 +0000</pubDate><guid>//owent.net/2011/482.html</guid><description>&lt;h2 id="linux-常用工具">Linux 常用工具&lt;/h2>
&lt;ul>
&lt;li>enca: &lt;a href="http://dl.cihar.com/enca/">http://dl.cihar.com/enca/&lt;/a>   文件名编码转换&lt;/li>
&lt;li>iconv: 文件编码转换&lt;/li>
&lt;li>convmv: 文件名编码转换&lt;/li>
&lt;li>ldd: 查看可执行文件或动态链接库的依赖库&lt;/li>
&lt;li>getconf: 查看配置信息（如getconf LONG_BIT可知当前系统是32位还是64位版本）&lt;/li>
&lt;li>tcpdump: 监视网络服务&lt;/li>
&lt;li>sync: 将缓冲区内容写入磁盘&lt;/li>
&lt;li>&lt;code>echo 3 &amp;gt; /proc/sys/vm/drop_caches&lt;/code>: 手动释放缓存&lt;/li>
&lt;li>nm: 查看符号表&lt;/li>
&lt;li>readelf: 查看ELF信息（Executable and Linkable Format）&lt;/li>
&lt;li>man: 文档&lt;/li>
&lt;li>top/htop: 查看最高占用&lt;/li>
&lt;li>perf: 性能数据采集&lt;/li>
&lt;li>sar: 系统信息采集&lt;/li>
&lt;li>uptime: 系统1分钟、5分钟和15分钟的系统平均负载&lt;/li>
&lt;li>free: 内存使用情况&lt;/li>
&lt;li>iostat: 磁盘IO使用情况&lt;/li>
&lt;li>pidstat: 查看进程状态&lt;/li>
&lt;li>ipcs: 查看共享内存、消息、信号量信息，如：ipcs -m 共享内存&lt;/li>
&lt;li>objdump –CS –l [bin文件]: 不反人类的反编译&lt;/li>
&lt;li>strace: 系统调用跟踪&lt;/li>
&lt;li>pstack: 查看当前调用栈&lt;/li>
&lt;li>lsof： 查看打开的文件&lt;/li>
&lt;li>ip addr: 查看ip地址&lt;/li>
&lt;/ul>
&lt;p>man [章节号] 手册名称:&lt;/p></description></item></channel></rss>