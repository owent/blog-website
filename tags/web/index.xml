<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Web on I'm OWenT</title><link>//owent.net/tags/web.html</link><description>Recent content in Web on I'm OWenT</description><generator>Hugo</generator><language>zh-cn</language><copyright>&lt;a rel="license" href="https://github.com/owent/blog-hugo/blob/master/LICENSE.md">&lt;img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png" />&lt;/a></copyright><lastBuildDate>Thu, 03 Jan 2019 17:08:50 +0000</lastBuildDate><atom:link href="//owent.net/tags/web/index.xml" rel="self" type="application/rss+xml"/><item><title>Rust玩具-企业微信机器人通用服务</title><link>//owent.net/2019/1901.html</link><pubDate>Thu, 03 Jan 2019 17:08:50 +0000</pubDate><guid>//owent.net/2019/1901.html</guid><description>&lt;h2 id="新玩具-企业微信机器人">新玩具-企业微信机器人&lt;/h2>
&lt;p>这个机器人其实蛮久前就做好了，现在才写了点分享出来。 最近企业微信不断地开放了机器人的接口，所以我想想拿来做一些开发工具集成也是挺不错的，顺便也是为了继续熟悉一下 &lt;a href="https://rust-lang.org/">Rust&lt;/a> 的编程习惯。 那么这次就大量使用 &lt;a href="https://crates.io/crates/futures">futures&lt;/a> 来实现这个机器人的接口服务，这也是即将到来的无栈协程语法糖 &lt;a href="https://crates.io/crates/futures-await">await&lt;/a> 的基石。&lt;/p></description></item><item><title>Rust的第二次接触-写个小服务器程序</title><link>//owent.net/2018/1809.html</link><pubDate>Wed, 12 Sep 2018 12:29:50 +0000</pubDate><guid>//owent.net/2018/1809.html</guid><description>&lt;h2 id="just-practice">JUST PRACTICE&lt;/h2>
&lt;p>蛮久前入门了一下 &lt;a href="https://rust-lang.org/">Rust&lt;/a> 语言。它的设计模型非常地吸引C/C++的开发者。但是学习语言嘛还是要练习一下，之前也用它给我们项目写了个命令行小工具。这回拿来写个小型的服务器程序吧。&lt;/p></description></item><item><title>接入letsencrypt+全面启用HTTP/2</title><link>//owent.net/2016/1253.html</link><pubDate>Sat, 07 May 2016 15:10:43 +0000</pubDate><guid>//owent.net/2016/1253.html</guid><description>&lt;p>之前我的域名只有owent.net和www.owent.net买了SSL证书，现在有&lt;a href="https://letsencrypt.org/">letsencrypt&lt;/a>可以拿到免费的SSL签证，就稍微花了点时间把我的域名的其他部分接入了&lt;a href="https://letsencrypt.org/">letsencrypt&lt;/a>签证系统。另外根据其他人的一些配置建议，提高了HTTPS的安全性配置和性能配置（主要是缓存）。另外原本我的blog就已经启用了spdy，然而现在新版本的&lt;a href="http://nginx.org/">nginx&lt;/a>（&lt;a href="http://nginx.org/en/CHANGES-1.10">1.10&lt;/a>）已经release，原先的spdy模块被取消，新增了http/2模块。但是直接换nginx掉包是不行滴（后面有说原因），所以顺带自己处理了一下HTTP/2和nginx新版本的问题。&lt;/p>
&lt;p>并且也对公司里的域名和webserver也这么搞了一下。全面启用HTTPS。&lt;/p></description></item><item><title>从Javascript到Typescript到Node.js</title><link>//owent.net/2013/851.html</link><pubDate>Wed, 10 Jul 2013 20:19:39 +0000</pubDate><guid>//owent.net/2013/851.html</guid><description>&lt;p>最近看了点typescript的东西，加上以前看过的一点点Node.js，所以就想把他们系统地整理一下。&lt;/p>
&lt;h2 id="javascript">Javascript&lt;/h2>
&lt;p>这玩意搞过Web开发的应该都知道吧，Javascript的语法我就不废话了，挺简单的。这里总结几个Javascript的核心机制部分吧。&lt;/p></description></item><item><title>JSON显示库 -- showJson （Javascript）</title><link>//owent.net/2012/573.html</link><pubDate>Sun, 01 Apr 2012 06:17:48 +0000</pubDate><guid>//owent.net/2012/573.html</guid><description>&lt;p>现在的web的js开发很方便啊，但是碰到iframe里的东西还是不方便看到变量的内容，所以就写了这么个看json内容的玩意，还可以当控制台输出用。&lt;/p></description></item><item><title>解析网站字符串型参数 Javascript QueryString 操作 TQueryString类</title><link>//owent.net/2010/104.html</link><pubDate>Mon, 01 Nov 2010 02:15:09 +0000</pubDate><guid>//owent.net/2010/104.html</guid><description>&lt;p>这是学校USRP项目需要而写的一个类，但是既然写出来了，以后也可能用到，就共享出来吧。&lt;/p>
&lt;p>这个类用于解析网页URL的QueryString参数，或者也可以当做操作一些其他设置的类库。&lt;/p></description></item></channel></rss>