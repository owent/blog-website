<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HASH on I'm OWenT</title><link>//owent.net/tags/hash.html</link><description>Recent content in HASH on I'm OWenT</description><generator>Hugo</generator><language>zh-cn</language><copyright>&lt;a rel="license" href="https://github.com/owent/blog-hugo/blob/master/LICENSE.md">&lt;img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png" />&lt;/a></copyright><lastBuildDate>Fri, 14 Oct 2011 12:17:17 +0000</lastBuildDate><atom:link href="//owent.net/tags/hash/index.xml" rel="self" type="application/rss+xml"/><item><title>C++ 新特性学习（二） -- Array、Tuple和Hash库</title><link>//owent.net/2011/518.html</link><pubDate>Fri, 14 Oct 2011 12:17:17 +0000</pubDate><guid>//owent.net/2011/518.html</guid><description>&lt;p>这回的两个库没怎么用过，这里的记录就用VC++写了，使用G++和BOOST的时候和智能指针类似。&lt;/p>
&lt;p>首先是&lt;strong>Tuple&lt;/strong>库&lt;/p>
&lt;p>要注意的是这里G++，VC++和BOOST库的函数不太一样，所以使用的时候要注意没有使用到编译器和编译器相关的函数（特别是IDE的弹窗的方法要注意）。&lt;/p></description></item><item><title>打造最快的Hash表(转) [以暴雪的游戏的Hash为例]</title><link>//owent.net/2009/87.html</link><pubDate>Wed, 22 Jul 2009 12:41:44 +0000</pubDate><guid>//owent.net/2009/87.html</guid><description>&lt;p>先提一个简单的问题，如果有一个庞大的字符串数组，然后给你一个单独的字符串，让你从这个数组中查找是否有这个字符串并找到它，你会怎么做？&lt;/p>
&lt;p>有一个方法最简单，老老实实从头查到尾，一个一个比较，直到找到为止，我想只要学过程序设计的人都能把这样一个程序作出来，但要是有程序员把这样的程序交给用户，我只能用无语来评价，或许它真的能工作，但…也只能如此了。&lt;/p></description></item></channel></rss>