<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>coroutine on I'm OWenT</title><link>//owent.net/tags/coroutine.html</link><description>Recent content in coroutine on I'm OWenT</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>admin@owent.net (OWenT)</managingEditor><webMaster>admin@owent.net (OWenT)</webMaster><lastBuildDate>Fri, 22 May 2020 15:36:58 +0000</lastBuildDate><atom:link href="//owent.net/tags/coroutine/index.xml" rel="self" type="application/rss+xml"/><item><title>libcopp接入C++20 Coroutine和一些过渡期的设计</title><link>//owent.net/2020/2004.html</link><pubDate>Fri, 22 May 2020 15:36:58 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2020/2004.html</guid><description>前言 计划给 libcopp 接入C++20协程也有一阵子了。最近GCC 10.1.0 发布，主流编译器基本也都支持了这个功能。最近就进行了一些接入的实施。我在设计新的接入</description></item><item><title>跨平台协程库 - libcopp 简介</title><link>//owent.net/2019/1912.html</link><pubDate>Tue, 22 Oct 2019 21:53:00 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2019/1912.html</guid><description>前段时间有同事联系我想看看可能推广我之前写的协程库 libcopp，虽然 libcopp 已经用到过好几个项目上，这几年也断断续续地写了一些实现细节的文章，但</description></item><item><title>C++20 Coroutine 性能测试 (附带和libcopp/libco/libgo/goroutine/linux ucontext对比)</title><link>//owent.net/2019/1911.html</link><pubDate>Sat, 05 Oct 2019 14:52:00 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2019/1911.html</guid><description>前言 之前写了 《协程框架(libcopp)v2优化、自适应栈池和同类库的Benchmark对比》 和 《C++20 Coroutine》 ，但是一直没</description></item><item><title>协程框架(libcopp) 小幅优化</title><link>//owent.net/2019/1907.html</link><pubDate>Sat, 22 Jun 2019 12:26:58 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2019/1907.html</guid><description>最近抽空继续对 libcopp 进行了更新和小幅优化。 首先的Merge了 boost.context 1.70.0 。这次boost.context的更新似乎和它写进 CHANGELOG 里的并不完全一致，匹配的只看</description></item><item><title>C++20 Coroutine</title><link>//owent.net/2019/1904.html</link><pubDate>Mon, 04 Mar 2019 20:38:00 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2019/1904.html</guid><description>前言 最近的新闻里 C++20 已经确认的内容里已经有了协程组件，之前都是粗略看过这个协程草案。最近抽时间更加系统性的看了下接入和实现细节。 我的测试代码都</description></item><item><title>libcopp merge boost.context 1.69.0</title><link>//owent.net/2019/1903.html</link><pubDate>Mon, 11 Feb 2019 10:35:32 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2019/1903.html</guid><description>过年啦，最近在看一些非技术性的东西，Anna 的Paper也还没看完。随手优化了下Blog的主题，修复和优化了一些小问题。然后来Merge了一</description></item><item><title>协程框架(libcopp)v2优化、自适应栈池和同类库的Benchmark对比</title><link>//owent.net/2018/1806.html</link><pubDate>Mon, 28 May 2018 20:23:31 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2018/1806.html</guid><description>协程系统优化 libcopp很早就实现完成了v2版本，现在迁移进atsf4g-co/tree/sample_solution以后也把v2分支正</description></item><item><title>libcopp v2的第一波优化完成</title><link>//owent.net/2017/1466.html</link><pubDate>Sat, 01 Jul 2017 15:57:29 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2017/1466.html</guid><description>之前测出来libcopp还有一些列优化点，但是要破坏之前的API，所以整理了一下优化的想法和方案。 预留空间和合并分配 之前有太多的堆内存分配了</description></item><item><title>libcopp(v2) vs goroutine性能测试</title><link>//owent.net/2017/1465.html</link><pubDate>Sat, 10 Jun 2017 15:57:29 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2017/1465.html</guid><description>本来是没想写这个对比。无奈之前和call_in_stack的作者聊了一阵，发现了一些libcopp的改进空间。然后顺便看了新的boost.c</description></item><item><title>libcopp的线程安全、栈池和merge boost.context 1.64.0</title><link>//owent.net/2017/1446.html</link><pubDate>Fri, 12 May 2017 19:45:17 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2017/1446.html</guid><description>线程安全 前段时间看到了一个完成读比较高的协程库-libgo，里面提供了线程安全的协程实现，并且也是使用锁。本来我并没有给libcopp里的功</description></item><item><title>近期的一个协程流程BUG</title><link>//owent.net/2017/1313.html</link><pubDate>Mon, 02 Jan 2017 23:13:25 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2017/1313.html</guid><description>最近一直没什么时间整理近期碰到的问题，今天思考了一下之前碰到的一个临时处理的BUG，顺便写点东西清理一下思路。 其实严格来说这个BUG更应该是</description></item></channel></rss>