<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Websocket on I'm OWenT</title><link>//owent.net/tags/websocket.html</link><description>Recent content in Websocket on I'm OWenT</description><generator>Hugo</generator><language>zh-cn</language><copyright>&lt;a rel="license" href="https://github.com/owent/blog-hugo/blob/master/LICENSE.md">&lt;img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png" />&lt;/a></copyright><lastBuildDate>Tue, 16 Oct 2018 17:10:50 +0000</lastBuildDate><atom:link href="//owent.net/tags/websocket/index.xml" rel="self" type="application/rss+xml"/><item><title>Webpack+vue+boostrap+ejs构建Web版GM工具</title><link>//owent.net/2018/1811.html</link><pubDate>Tue, 16 Oct 2018 17:10:50 +0000</pubDate><guid>//owent.net/2018/1811.html</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>Web前端的组件技术刷新真的是日新月异，前段时间看到很多童鞋分享了&lt;a href="https://webpack.js.org/">webpack&lt;/a>的使用，刚好之前做我们游戏里Web版的GM工具的时候正在想怎么用简单的方式，做模块分离并且又不需要引入重量级的第三方库或组件，也不需要太繁琐的流程（毕竟只是个小工具）。&lt;/p>
&lt;p>我们的Web版GM工具长差不多这个样子，全静态页面。&lt;/p>
&lt;p>&lt;img src="1811-01.png" alt="1811-01.png">&lt;/p>
&lt;p>&lt;img src="1811-02.png" alt="1811-02.png">&lt;/p>
&lt;p>因为分成了好几个模块，然后由于用的是bootstrap的。上面的Tab和下面的内容还有处理逻辑的函数都分了三大块，在不同的位置。在内容持续增加以后，全都写在一个html里太不方便了，而如果走ajax加载，调试和本地编辑都挺麻烦。&lt;/p></description></item><item><title>Rust的第二次接触-写个小服务器程序</title><link>//owent.net/2018/1809.html</link><pubDate>Wed, 12 Sep 2018 12:29:50 +0000</pubDate><guid>//owent.net/2018/1809.html</guid><description>&lt;h2 id="just-practice">JUST PRACTICE&lt;/h2>
&lt;p>蛮久前入门了一下 &lt;a href="https://rust-lang.org/">Rust&lt;/a> 语言。它的设计模型非常地吸引C/C++的开发者。但是学习语言嘛还是要练习一下，之前也用它给我们项目写了个命令行小工具。这回拿来写个小型的服务器程序吧。&lt;/p></description></item></channel></rss>