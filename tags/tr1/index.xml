<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tr1 on I&#39;m OWenT</title>
    <link>//owent.net/tags/tr1.html</link>
    <description>Recent content in tr1 on I&#39;m OWenT</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <managingEditor>admin@owent.net (OWenT)</managingEditor>
    <webMaster>admin@owent.net (OWenT)</webMaster>
    <lastBuildDate>Mon, 27 Jan 2014 16:27:46 +0000</lastBuildDate>
    
	<atom:link href="//owent.net/tags/tr1/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C&#43;&#43;11动态模板参数和type_traits</title>
      <link>//owent.net/2014/971.html</link>
      <pubDate>Mon, 27 Jan 2014 16:27:46 +0000</pubDate>
      <author>admin@owent.net (OWenT)</author>
      <guid>//owent.net/2014/971.html</guid>
      <description>C++11标准里有动态模板参数已经是众所周知的事儿了。但是当时还有个主流编译器还不支持。 但是现在，主要的编译器。VC(Windows),GC</description>
    </item>
    
    <item>
      <title>std和boost的function与bind实现剖析</title>
      <link>//owent.net/2013/938.html</link>
      <pubDate>Thu, 28 Nov 2013 22:01:30 +0000</pubDate>
      <author>admin@owent.net (OWenT)</author>
      <guid>//owent.net/2013/938.html</guid>
      <description>用过std和boost的function对象和bind函数的童鞋们都知道这玩意用起来腰不酸了，腿不疼了，心情也舒畅了。先上一个简单得示例： std::string</description>
    </item>
    
    <item>
      <title>C&#43;&#43; 标准过渡期</title>
      <link>//owent.net/2012/643.html</link>
      <pubDate>Thu, 23 Aug 2012 06:05:20 +0000</pubDate>
      <author>admin@owent.net (OWenT)</author>
      <guid>//owent.net/2012/643.html</guid>
      <description>C++11的新标准已经出台，各个编译器已经开始陆续支持。 主流编译器支持程度见(VC++, gcc, clang, intel c++等)：http://en.cpprefe</description>
    </item>
    
    <item>
      <title>C&#43;&#43; 新特性学习（五） — 引用包装、元编程的类型属性和计算函数对象返回类型</title>
      <link>//owent.net/2012/558.html</link>
      <pubDate>Sun, 26 Feb 2012 14:22:28 +0000</pubDate>
      <author>admin@owent.net (OWenT)</author>
      <guid>//owent.net/2012/558.html</guid>
      <description>这各部分主要是一些很实用和在一些地方帮助编译器自动推断类型的库和函数 首先是引用包装 类名 template&amp;lt; class T &amp;gt; class std::reference_wrapper; 这个类保存了对一个类实例、(成员)函数(指</description>
    </item>
    
    <item>
      <title>C&#43;&#43; 新特性学习（四） — Bind和Function</title>
      <link>//owent.net/2012/536.html</link>
      <pubDate>Fri, 10 Feb 2012 09:52:37 +0000</pubDate>
      <author>admin@owent.net (OWenT)</author>
      <guid>//owent.net/2012/536.html</guid>
      <description>绑定函数是我认为C++新标准里第二有用的库了 绑定库的使用环境是： GCC-C++ 4.3 及以上 Visual Studio 2008 SP1 及以上 BOOST 1.25及以上（其中function是1.16及以</description>
    </item>
    
    <item>
      <title>C&#43;&#43; 新特性学习（三） — Regex库</title>
      <link>//owent.net/2011/534.html</link>
      <pubDate>Sat, 22 Oct 2011 14:38:01 +0000</pubDate>
      <author>admin@owent.net (OWenT)</author>
      <guid>//owent.net/2011/534.html</guid>
      <description>C++ STL终于会放点实用的东西了。可喜可贺。 这个，显然是正则表达式库，作为一个强大而又NB的库，我表示对其理解甚少，只能先研究下基本用法，更具</description>
    </item>
    
    <item>
      <title>C&#43;&#43; 新特性学习（二） -- Array、Tuple和Hash库</title>
      <link>//owent.net/2011/518.html</link>
      <pubDate>Fri, 14 Oct 2011 12:17:17 +0000</pubDate>
      <author>admin@owent.net (OWenT)</author>
      <guid>//owent.net/2011/518.html</guid>
      <description>这回的两个库没怎么用过，这里的记录就用VC++写了，使用G++和BOOST的时候和智能指针类似。 首先是Tuple库 要注意的是这里G++，VC</description>
    </item>
    
    <item>
      <title>C&#43;&#43; 新特性学习（一） -- 概述&#43;智能指针（smart_ptr）</title>
      <link>//owent.net/2011/508.html</link>
      <pubDate>Fri, 14 Oct 2011 04:12:48 +0000</pubDate>
      <author>admin@owent.net (OWenT)</author>
      <guid>//owent.net/2011/508.html</guid>
      <description>C++ 0x/11 终于通过了,真是个很爽的消息。于是乎我决定对新的东西系统学习一下。 首先当然要从tr1开始，智能指针实际上我已经用过很多次了，但是为了完整</description>
    </item>
    
  </channel>
</rss>