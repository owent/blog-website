<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blablabla on I'm OWenT</title><link>//owent.net/categories/blablabla.html</link><description>Recent content in Blablabla on I'm OWenT</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>admin@owent.net (OWenT)</managingEditor><webMaster>admin@owent.net (OWenT)</webMaster><lastBuildDate>Mon, 10 Feb 2020 17:12:00 +0000</lastBuildDate><atom:link href="//owent.net/categories/blablabla/index.xml" rel="self" type="application/rss+xml"/><item><title>nftables初体验</title><link>//owent.net/2020/2002.html</link><pubDate>Mon, 10 Feb 2020 17:12:00 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2020/2002.html</guid><description>前言 之前耳闻 nftables 是下一代 iptables 。前段时间配了一台主机，折腾成家里的软路由。就一并来尝鲜一系列新东西，其中就包括 nftables 。nftables 和 iptables 、ebtab</description></item><item><title>容器配置开发环境小计</title><link>//owent.net/2020/2001.html</link><pubDate>Sun, 19 Jan 2020 21:43:50 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2020/2001.html</guid><description>前言 这段时间折腾了好久容器搭建开发环境和家里软路由趟的一些坑。这里先记录一下使用容器搭开发环境的一些流程和问题。 开发环境一般里面会包含很多的</description></item><item><title>PALM Tree - 适合多核并发架构的B+树 - 论文阅读小记</title><link>//owent.net/2019/1913.html</link><pubDate>Sat, 02 Nov 2019 17:09:58 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2019/1913.html</guid><description>介绍 年初的时候再知乎上看到有人分享 PALM树 树的文章，看简介是专为多核并发而设计的树形结构。比较好奇所以抽时间来看了看它的设计原理和是如合做</description></item><item><title>跨平台协程库 - libcopp 简介</title><link>//owent.net/2019/1912.html</link><pubDate>Tue, 22 Oct 2019 21:53:00 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2019/1912.html</guid><description>前段时间有同事联系我想看看可能推广我之前写的协程库 libcopp，虽然 libcopp 已经用到过好几个项目上，这几年也断断续续地写了一些实现细节的文章，但</description></item><item><title>C++20 Coroutine 性能测试 (附带和libcopp/libco/libgo/goroutine/linux ucontext对比)</title><link>//owent.net/2019/1911.html</link><pubDate>Sat, 05 Oct 2019 14:52:00 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2019/1911.html</guid><description>前言 之前写了 《协程框架(libcopp)v2优化、自适应栈池和同类库的Benchmark对比》 和 《C++20 Coroutine》 ，但是一直没</description></item><item><title>尝鲜Github Action</title><link>//owent.net/2019/1910.html</link><pubDate>Sat, 21 Sep 2019 13:21:58 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2019/1910.html</guid><description>前言 Github Action 上线有一阵子了，大概两周前我的所有账号也是都陆陆续续开发了beta测试的权限。然后就来研究了下这个新的 CI 系统是怎么回事。看介绍，和之</description></item><item><title>一些xresloader（转表工具）的改进</title><link>//owent.net/2019/1909.html</link><pubDate>Wed, 11 Sep 2019 19:49:58 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2019/1909.html</guid><description>前言 最近有几个其他项目组的童鞋给我之前的 转表工具链-xresloader 提了几个需求。然后我也根据我们近期一些需求点对转表工具链一起给这套工</description></item><item><title>protobuf、flatbuffer、msgpack 针对小数据包的简单对比</title><link>//owent.net/2019/1908.html</link><pubDate>Sat, 03 Aug 2019 10:59:58 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2019/1908.html</guid><description>前言 前段时间我尝试给 atframework 的 libatapp 整合进UnrealEngine做Dedicated Server和逻辑server通信的时候碰到了一些问题。主要在于</description></item><item><title>协程框架(libcopp) 小幅优化</title><link>//owent.net/2019/1907.html</link><pubDate>Sat, 22 Jun 2019 12:26:58 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2019/1907.html</guid><description>最近抽空继续对 libcopp 进行了更新和小幅优化。 首先的Merge了 boost.context 1.70.0 。这次boost.context的更新似乎和它写进 CHANGELOG 里的并不完全一致，匹配的只看</description></item><item><title>Excel转表工具(xresloader) 增加protobuf插件功能和集成 UnrealEngine 支持</title><link>//owent.net/2019/1906.html</link><pubDate>Sat, 08 Jun 2019 12:47:58 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2019/1906.html</guid><description>前言 我们项目组最近在学习UE，然后就涉及导表这个东东。之前我已经做过一个功能比较全面并且跨平台的Excel导出protobuf、msgpac</description></item><item><title>Anna（支持任意扩展和超高性能的KV数据库系统）阅读笔记</title><link>//owent.net/2019/1905.html</link><pubDate>Sun, 21 Apr 2019 11:38:16 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2019/1905.html</guid><description>前言 年前被同事安利了这个分布式最终一致性的存储系统 Anna 。初略看了一眼Paper，似乎很是牛X。说是支持任意规模的扩展，并且性能不低于 pedis</description></item><item><title>C++20 Coroutine</title><link>//owent.net/2019/1904.html</link><pubDate>Mon, 04 Mar 2019 20:38:00 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2019/1904.html</guid><description>前言 最近的新闻里 C++20 已经确认的内容里已经有了协程组件，之前都是粗略看过这个协程草案。最近抽时间更加系统性的看了下接入和实现细节。 我的测试代码都</description></item><item><title>libcopp merge boost.context 1.69.0</title><link>//owent.net/2019/1903.html</link><pubDate>Mon, 11 Feb 2019 10:35:32 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2019/1903.html</guid><description>过年啦，最近在看一些非技术性的东西，Anna 的Paper也还没看完。随手优化了下Blog的主题，修复和优化了一些小问题。然后来Merge了一</description></item><item><title>Google去中心化分布式系统论文三件套(Percolator、Spanner、F1)读后感</title><link>//owent.net/2019/1902.html</link><pubDate>Thu, 31 Jan 2019 22:49:50 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2019/1902.html</guid><description>前言 之前看过 《大规模分布式存储系统：原理解析与架构实战》 ，这个系统设计还是挺有意思的，里面提及了Google的一整套系统都有论文，而且现在已</description></item><item><title>Rust玩具-企业微信机器人通用服务</title><link>//owent.net/2019/1901.html</link><pubDate>Thu, 03 Jan 2019 17:08:50 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2019/1901.html</guid><description>新玩具-企业微信机器人 这个机器人其实蛮久前就做好了，现在才写了点分享出来。 最近企业微信不断地开放了机器人的接口，所以我想想拿来做一些开发工具</description></item><item><title>使用ELK辅助监控开发测试环境服务质量和问题定位</title><link>//owent.net/2018/1812.html</link><pubDate>Sat, 17 Nov 2018 02:00:00 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2018/1812.html</guid><description>什么是ELK？ ELK 是 elasticsearch + logstash + kibana的缩写。这一套是现在比较流行的日志全文索引系统了。我之前的项目也有用它来做过日志分析，这次主要是拿来搭</description></item><item><title>2018年的新通用伪随机数算法(xoshiro / xoroshiro)的C++(head only)实现</title><link>//owent.net/2018/1810.html</link><pubDate>Thu, 18 Oct 2018 13:43:31 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2018/1810.html</guid><description>前段时间看到说Lua 5.4用了一种新的通用随机数算法，替换掉本来内部使用的CRT的随机数引擎。我看了一下大致的实现，CPU和空间复杂度任然保</description></item><item><title>Webpack+vue+boostrap+ejs构建Web版GM工具</title><link>//owent.net/2018/1811.html</link><pubDate>Tue, 16 Oct 2018 17:10:50 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2018/1811.html</guid><description>前言 Web前端的组件技术刷新真的是日新月异，前段时间看到很多童鞋分享了webpack的使用，刚好之前做我们游戏里Web版的GM工具的时候正在</description></item><item><title>Rust的第二次接触-写个小服务器程序</title><link>//owent.net/2018/1809.html</link><pubDate>Wed, 12 Sep 2018 12:29:50 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2018/1809.html</guid><description>JUST PRACTICE 蛮久前入门了一下 Rust 语言。它的设计模型非常地吸引C/C++的开发者。但是学习语言嘛还是要练习一下，之前也用它给我们项目写了个命令行小工具。</description></item><item><title>理解和适配AEAD加密套件</title><link>//owent.net/2018/1808.html</link><pubDate>Sun, 01 Jul 2018 20:49:50 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2018/1808.html</guid><description>什么是AEAD 按照维基百科的说法。AEAD的全称是Authenticated encryption (AE) and authenticated encryption with associated data (AEAD, variant of AE)。也就是带附加数据的加密和验证算法。</description></item><item><title>atsf4g-co的进化：协程框架v2、对象路由系统和一些其他细节优化</title><link>//owent.net/2018/1807.html</link><pubDate>Fri, 22 Jun 2018 23:22:15 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2018/1807.html</guid><description>前言 年前就计划把以前项目的一些理念和设计方案融合到sample里来。但是内容比较多，一直也没太多时间去完成它。所幸虽然断断续续但终归是完成了</description></item><item><title>协程框架(libcopp)v2优化、自适应栈池和同类库的Benchmark对比</title><link>//owent.net/2018/1806.html</link><pubDate>Mon, 28 May 2018 20:23:31 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2018/1806.html</guid><description>协程系统优化 libcopp很早就实现完成了v2版本，现在迁移进atsf4g-co/tree/sample_solution以后也把v2分支正</description></item><item><title>可执行文件压缩</title><link>//owent.net/2018/1805.html</link><pubDate>Tue, 24 Apr 2018 10:58:05 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2018/1805.html</guid><description>前言 最近看Rust相关东西的时候看到一篇关于压缩可执行文件的文章。压缩可执行文件对嵌入式开发特别有用，但是延伸一下用来减少我们游戏行业里预编</description></item><item><title>初识Rust</title><link>//owent.net/2018/1804.html</link><pubDate>Mon, 23 Apr 2018 21:54:50 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2018/1804.html</guid><description>前言 虽然我主要使用C++，但是最近也想学点现代化的新语言。初步想的是从golang和Rust里先选一个。 这两年golang在国内很火，最大的</description></item><item><title>使用restructedtext编写xresloader文档</title><link>//owent.net/2018/1803.html</link><pubDate>Tue, 03 Apr 2018 17:22:42 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2018/1803.html</guid><description>离上一次写Blog过了好久啦。这次拖这么长时间主要是因为最近学习了一个新的文本标记语言 &amp;ndash; ReStructuredText 。并且重新整理了Excel导表工具-xresloa</description></item><item><title>atframework的etcd模块化重构</title><link>//owent.net/2018/1802.html</link><pubDate>Tue, 20 Feb 2018 22:43:00 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2018/1802.html</guid><description>前言 最近在抽时间整理之气的游戏服务器框架和解决方案里atsf4g-co，现在的架构是使用etcd的是atproxy。简单得说就是服务集群是分</description></item><item><title>C++的backtrace</title><link>//owent.net/2018/1801.html</link><pubDate>Mon, 08 Jan 2018 17:55:00 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2018/1801.html</guid><description>开始之前 很多语言的log模块都有一个功能，就是在打log的时候能够追溯调用栈，有的时候对查bug能有点帮助。之前我也想过给我们的log模块加</description></item><item><title>ECDH椭圆双曲线（比DH快10倍的密钥交换）算法简介和封装</title><link>//owent.net/2017/1472.html</link><pubDate>Fri, 10 Nov 2017 13:30:00 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2017/1472.html</guid><description>前面有几篇blog就提到我有计划支持使用ECDH密钥交换。近期也是抽空把以前的DH密钥交换跨平台适配从atgateway抽离出来，而后接入了</description></item><item><title>protobuf-net的动态Message实现</title><link>//owent.net/2017/1471.html</link><pubDate>Tue, 31 Oct 2017 17:57:00 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2017/1471.html</guid><description>这本来是个早就可以写的分享。因为代码几周前就迁移并准备好了。而且这也是之前项目的工具，因为可以抽离出来通用化所以单独整理出来。 这个项目起源于</description></item><item><title>pbc的proto3接入</title><link>//owent.net/2017/1470.html</link><pubDate>Sat, 16 Sep 2017 17:57:00 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2017/1470.html</guid><description>Protobuf 的 proto3发布也有挺长一段时间了。现在很多新项目慢慢转变用proto3来开发。这篇文章主要记录一下我在给pbc写对proto3支持时的</description></item><item><title>atgateway内置协议流程优化-加密、算法协商和ECDH</title><link>//owent.net/2017/1469.html</link><pubDate>Fri, 08 Sep 2017 18:37:00 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2017/1469.html</guid><description>之前就有计划优化游戏服务器框架网关层的内部协议了，这次泰国旅游回来，新公司入职前，正海有空来做这件事。 加密协商 以前提到过，最初决定重构这个流</description></item><item><title>整理一波软件源镜像同步工具+DevOps工具</title><link>//owent.net/2017/1468.html</link><pubDate>Thu, 17 Aug 2017 12:33:44 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2017/1468.html</guid><description>上个月，同学的公司，格奕，突然间跪了。这个月基本属于休息+四处溜达。同时空闲的时候也想整理下之前做得一些之前的做得一些小工具们。在不泄密的情</description></item><item><title>Blog切换到Hugo</title><link>//owent.net/2017/1467.html</link><pubDate>Mon, 17 Jul 2017 12:33:44 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2017/1467.html</guid><description>其实很早就想把Blog迁移到静态化的博客系统了。不过一直没花时间来搞，当然主要原因还是懒。 这次下决心搞主要是因为，之前VPS迁移到Vultr</description></item><item><title>libcopp的线程安全、栈池和merge boost.context 1.64.0</title><link>//owent.net/2017/1446.html</link><pubDate>Fri, 12 May 2017 19:45:17 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2017/1446.html</guid><description>线程安全 前段时间看到了一个完成读比较高的协程库-libgo，里面提供了线程安全的协程实现，并且也是使用锁。本来我并没有给libcopp里的功</description></item><item><title>GCC 7和LLVM+Clang+libc++abi 4.0的构建脚本</title><link>//owent.net/2017/1431.html</link><pubDate>Tue, 09 May 2017 11:17:55 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2017/1431.html</guid><description>之前的版本发完，有空来更新一下之前的gcc和llvm+clang工具链的编译脚本了。其实GCC 7是才release没多久但是llvm 4.0发</description></item><item><title>2016年总结</title><link>//owent.net/2017/1334.html</link><pubDate>Fri, 03 Feb 2017 19:08:44 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2017/1334.html</guid><description>又好久没写blog啦。诶最近好懒啊。正好过年在家里有点空，写完我那些lib的patch之后还有一点时间写一下2016年的总结吧。 之前两年的总</description></item><item><title>接入letsencrypt+全面启用HTTP/2</title><link>//owent.net/2016/1253.html</link><pubDate>Sat, 07 May 2016 15:10:43 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2016/1253.html</guid><description>之前我的域名只有owent.net和www.owent.net买了SSL证书，现在有letsencrypt可以拿到免费的SSL签证，就稍微花</description></item><item><title>博客文章和文档迁移到gitbook</title><link>//owent.net/2016/1209.html</link><pubDate>Fri, 15 Jan 2016 21:42:11 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2016/1209.html</guid><description>使用_Markdown_写blog已经很久了，近期接触并且看了下流传已久的gitbook平台，感觉做得确实不错。、 之前写blog的时候一直用</description></item><item><title>近期活动比较零散</title><link>//owent.net/2015/1203.html</link><pubDate>Mon, 28 Dec 2015 23:51:49 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2015/1203.html</guid><description>近期的活动比较零散，主要的业余精力都放在了libatbus上了。但是这个一时半会也写不完，所以能整理出来的东西不多。就说下最近跟进的开源代码</description></item><item><title>关于BUS通信系统的一些思考（三）</title><link>//owent.net/2015/1201.html</link><pubDate>Sun, 08 Nov 2015 17:17:05 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2015/1201.html</guid><description>接上文关于bus通信系统的一些思考（二） 之前的文章内容应该要有修订，但是并没有更新到blog里，而是直接写在了libatbus的文档里 目录 前</description></item><item><title>关于BUS通信系统的一些思考（二）</title><link>//owent.net/2014/1099.html</link><pubDate>Tue, 05 Aug 2014 14:08:20 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2014/1099.html</guid><description>接上文 目录 BUS系统的设计思路 虽然我很不愿意再设计一套BUS系统，但是现有的一些确实都没有特别符合我的口味的。所以还是尝试设计一个出来。 结构</description></item><item><title>关于BUS通信系统的一些思考（一）</title><link>//owent.net/2014/1090.html</link><pubDate>Fri, 01 Aug 2014 14:21:53 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2014/1090.html</guid><description>目录 概述 如何保证一个进程或线程能安全稳定地把一段消息发送到另一个进程和线程，甚至是另一台机器的进程或线程，再或是要通过代理转发到另一个进程或</description></item><item><title>再议 C++ 11 Lambda表达式</title><link>//owent.net/2014/1060.html</link><pubDate>Tue, 03 Jun 2014 20:55:44 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2014/1060.html</guid><description>目录 C++ 的Lambda表达式 C++ 11 标准发布，各大编译器都开始支持里面的各种新特性，其中一项比较有意思的就是lambda表达式。 语法规则 C++ 11 Lam</description></item><item><title>C++11动态模板参数和type_traits</title><link>//owent.net/2014/971.html</link><pubDate>Mon, 27 Jan 2014 16:27:46 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2014/971.html</guid><description>C++11标准里有动态模板参数已经是众所周知的事儿了。但是当时还有个主流编译器还不支持。 但是现在，主要的编译器。VC(Windows),GC</description></item><item><title>C++又一坑:动态链接库中的全局变量</title><link>//owent.net/2014/962.html</link><pubDate>Sat, 04 Jan 2014 17:30:32 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2014/962.html</guid><description>前几天我们项目的日志系统出现了一点问题，但是一直没有时间去深究。 昨天在同事的帮助下，无意中猜了一种可能性，结果还真被我猜中了，于是今天就特别</description></item><item><title>std和boost的function与bind实现剖析</title><link>//owent.net/2013/938.html</link><pubDate>Thu, 28 Nov 2013 22:01:30 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2013/938.html</guid><description>用过std和boost的function对象和bind函数的童鞋们都知道这玩意用起来腰不酸了，腿不疼了，心情也舒畅了。先上一个简单得示例： std::string</description></item><item><title>Lua 挺好用的样子</title><link>//owent.net/2013/918.html</link><pubDate>Thu, 24 Oct 2013 20:59:44 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2013/918.html</guid><description>项目里面引入了Lua，就特别学习了一下。 其实对于理解Javascipt的人来说，Lua也很容易理解，因为他们太多的地方相像了。 初步看来，Lu</description></item><item><title>VC和GCC成员函数指针实现的研究(三)</title><link>//owent.net/2013/902.html</link><pubDate>Wed, 11 Sep 2013 14:57:15 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2013/902.html</guid><description>接上一篇 VC和GCC内成员函数指针实现的研究(二) 虚继承 终于到最后的虚继承了。 测试代码如下: #include &amp;lt;ctime&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;cstdio&amp;gt; #include &amp;lt;stdint.h&amp;gt; #include &amp;lt;cstddef&amp;gt; #include &amp;lt;string&amp;gt; class foo_a { public: virtual ~foo_a(){} virtual void info() {</description></item><item><title>VC和GCC成员函数指针实现的研究(二)</title><link>//owent.net/2013/896.html</link><pubDate>Wed, 11 Sep 2013 14:44:06 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2013/896.html</guid><description>接上一篇 VC和GCC内成员函数指针实现的研究(一) 接下来是多重继承，用到的测试代码如下所示: #include &amp;lt;ctime&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;cstdio&amp;gt; #include &amp;lt;stdint.h&amp;gt; #include &amp;lt;cstddef&amp;gt; #include &amp;lt;string&amp;gt; class foo_a { public: virtual ~foo_a(){} virtual void info() {</description></item><item><title>VC和GCC内成员函数指针实现的研究(一)</title><link>//owent.net/2013/890.html</link><pubDate>Fri, 06 Sep 2013 12:55:58 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2013/890.html</guid><description>最近在《C++对象模型》一书里说到的virtual的成员函数指针，低于128的被cfront编译器认为是虚表偏移量（支持子类对父类函数的覆盖</description></item><item><title>一个C++关于成员变量偏移地址的小Trick</title><link>//owent.net/2013/879.html</link><pubDate>Mon, 26 Aug 2013 14:16:37 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2013/879.html</guid><description>今天看到一个小例子，发现了一个小trick。见代码： #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstdlib&amp;gt; class base_1 { public: int a; }; class base_2 { public: int b; }; class base_3: public base_1, public base_2 { public: int c; }; int main(int argc, char* argv[]) { printf(&amp;quot;&amp;amp;base_1::a = %p\n&amp;quot;, &amp;amp;base_1::a); printf(&amp;quot;&amp;amp;base_2::b = %p\n&amp;quot;, &amp;amp;base_2::b); printf(&amp;quot;&amp;amp;base_3::a</description></item><item><title>ptmalloc,tcmalloc和jemalloc内存分配策略研究</title><link>//owent.net/2013/867.html</link><pubDate>Wed, 31 Jul 2013 13:02:53 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2013/867.html</guid><description>最近看了glibc的ptmaoolc，Goolge的tcmalloc和jemalloc，顺便做了一点记录。可能有些地方理解地不太对，如有发现</description></item><item><title>从Javascript到Typescript到Node.js</title><link>//owent.net/2013/851.html</link><pubDate>Wed, 10 Jul 2013 20:19:39 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2013/851.html</guid><description>最近看了点typescript的东西，加上以前看过的一点点Node.js，所以就想把他们系统地整理一下。 Javascript 这玩意搞过Web开发的应该都知道吧</description></item><item><title>网络编程小结</title><link>//owent.net/2013/818.html</link><pubDate>Thu, 30 May 2013 14:31:09 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2013/818.html</guid><description>写这个小结主要是因为之前研究Boost.Asio的时候，其内部使用了很多不同的方法来实现异步网络编程 然后就顺便把一些高级的玩意看了一下，也顺</description></item><item><title>试试Boost.Asio</title><link>//owent.net/2013/811.html</link><pubDate>Thu, 23 May 2013 18:13:58 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2013/811.html</guid><description>慢慢一点一点看看Boost，这段时间就Asio库吧。 据说这货和libevent的效率差不多，但是Boost的平台兼容性，你懂得。还有它帮忙干</description></item><item><title>Linux 编译安装 GCC 4.8</title><link>//owent.net/2013/730.html</link><pubDate>Tue, 26 Mar 2013 10:01:33 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2013/730.html</guid><description>Linux 编译安装 GCC 4.8 详见: Linux 编译安装 GCC 4.8 GCC4.8发布啦，这个脚本在之前4.7的基础上做了点改进，移除一些过时的组件,增加了检测不到时自动下载源</description></item><item><title>Boost.Spirit 初体验</title><link>//owent.net/2012/674.html</link><pubDate>Thu, 08 Nov 2012 18:57:34 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2012/674.html</guid><description>使用代码生成代码是一件十分美妙的事情，于是有了各种代码生成器。但是生成代码，意味着要有对生成规则的分析和处理。 Boost.Spirit 就是这么一个语法分析工具，它</description></item><item><title>“C++的90个坑”-阅读笔记</title><link>//owent.net/2012/662.html</link><pubDate>Mon, 22 Oct 2012 23:04:53 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2012/662.html</guid><description>前言 C++确实是一门复杂的语言。包括之前查看了一些C++11的文档和做了一些实践和总结，越来越觉得C++是门神奇的语言，也是个陷阱多多的语言</description></item><item><title>AC自动机</title><link>//owent.net/2012/652.html</link><pubDate>Tue, 28 Aug 2012 20:10:27 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2012/652.html</guid><description>某个课程的作业，促使我来看看这玩意。 整个程序的算法思想是看别人的ACM的blog看懂的，感觉确实和KMP很像。但是代码呢就比较工程化一点。顺</description></item><item><title>程序员修炼之道 -- 阅读笔记</title><link>//owent.net/2012/635.html</link><pubDate>Sun, 05 Aug 2012 03:23:32 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2012/635.html</guid><description>终于要离开学校了，终于有时间可以静下来看看之前导师推荐的书籍。之前有看到说《程序员修炼之道》是对程序员影响最为深刻的书， 就从它开始吧。用这个</description></item><item><title>C++ 新特性学习（八） — 原子操作和多线程库[多工内存模型]</title><link>//owent.net/2012/611.html</link><pubDate>Tue, 12 Jun 2012 08:58:09 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2012/611.html</guid><description>这是我对C++新特性系统学习的最后一部分，之后就靠实践中再来看新标准的新特性啦。 在之前，我对这部分没太在意，直到看到了一篇文章 [http://blog.csdn.net/pongba/article/details/1659952](http://blog.csdn.net/pongba/article/details/1659952) 才意识到，C</description></item><item><title>C++ 新特性学习（七） — 右值引用</title><link>//owent.net/2012/603.html</link><pubDate>Thu, 31 May 2012 04:50:21 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2012/603.html</guid><description>C++在效率上有个硬伤。我们知道C#和Java对于类传递都是以引用的方式，而C++默认都是传值。在传值过程中就经常会进行复制构造，这完全没必</description></item><item><title>理解Protobuf的数据编码规则</title><link>//owent.net/2012/595.html</link><pubDate>Thu, 31 May 2012 02:18:17 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2012/595.html</guid><description>之前用Google的Protobuf感觉真是个很好用的东西，于是抽时间研究了下他的数据的存储方式，以后可以扩展其他语言的解析器。其实与其说是</description></item><item><title>C++ 新特性学习（六） — 新的字符串编码和伪随机数</title><link>//owent.net/2012/560.html</link><pubDate>Mon, 27 Feb 2012 05:37:59 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2012/560.html</guid><description>其实这个部分是我觉得最没用的部分 新的字符编码 注：这部分仅测过GCC，VS暂不支持 在旧的标准C++中支持两种字符编码。 直接使用””将产生con</description></item><item><title>C++ 新特性学习（五） — 引用包装、元编程的类型属性和计算函数对象返回类型</title><link>//owent.net/2012/558.html</link><pubDate>Sun, 26 Feb 2012 14:22:28 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2012/558.html</guid><description>这各部分主要是一些很实用和在一些地方帮助编译器自动推断类型的库和函数 首先是引用包装 类名 template&amp;lt; class T &amp;gt; class std::reference_wrapper; 这个类保存了对一个类实例、(成员)函数(指</description></item><item><title>C++ 新特性学习（四） — Bind和Function</title><link>//owent.net/2012/536.html</link><pubDate>Fri, 10 Feb 2012 09:52:37 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2012/536.html</guid><description>绑定函数是我认为C++新标准里第二有用的库了 绑定库的使用环境是： GCC-C++ 4.3 及以上 Visual Studio 2008 SP1 及以上 BOOST 1.25及以上（其中function是1.16及以</description></item><item><title>C++ 新特性学习（三） — Regex库</title><link>//owent.net/2011/534.html</link><pubDate>Sat, 22 Oct 2011 14:38:01 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2011/534.html</guid><description>C++ STL终于会放点实用的东西了。可喜可贺。 这个，显然是正则表达式库，作为一个强大而又NB的库，我表示对其理解甚少，只能先研究下基本用法，更具</description></item><item><title>C++ 新特性学习（二） -- Array、Tuple和Hash库</title><link>//owent.net/2011/518.html</link><pubDate>Fri, 14 Oct 2011 12:17:17 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2011/518.html</guid><description>这回的两个库没怎么用过，这里的记录就用VC++写了，使用G++和BOOST的时候和智能指针类似。 首先是Tuple库 要注意的是这里G++，VC</description></item><item><title>C++ 新特性学习（一） -- 概述+智能指针（smart_ptr）</title><link>//owent.net/2011/508.html</link><pubDate>Fri, 14 Oct 2011 04:12:48 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2011/508.html</guid><description>C++ 0x/11 终于通过了,真是个很爽的消息。于是乎我决定对新的东西系统学习一下。 首先当然要从tr1开始，智能指针实际上我已经用过很多次了，但是为了完整</description></item><item><title>非常帅气的Linq to sql</title><link>//owent.net/2011/447.html</link><pubDate>Thu, 02 Jun 2011 10:57:03 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2011/447.html</guid><description>Linq是.NET 3里新增的东西，我在软件工程课程设计里初步应用到一点，而且主要用在Lambda表达式上，今天算是在好奇心驱动下尝试了一下在</description></item><item><title>2011 Google Code Jam 小记</title><link>//owent.net/2011/416.html</link><pubDate>Sun, 22 May 2011 07:46:12 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2011/416.html</guid><description>好久没写这种类型的代码，感觉真是退步了很多。 这是我第一次参加Google Code Jam，以前有过报名可是没有做过。 我发现Google Code Jam的题目</description></item><item><title>C++总是很神奇</title><link>//owent.net/2011/359.html</link><pubDate>Tue, 26 Apr 2011 07:08:13 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2011/359.html</guid><description>很多时候看到C/C++的一些奇妙的应用，每次都是惊奇一点时间就随风飘过了 现在我还是决定记录一下这些有意思的东西。 2010/04 a ^= b ^= a ^=b; 这是一个交换值</description></item></channel></rss>