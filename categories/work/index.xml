<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Work on I'm OWenT</title><link>//owent.net/categories/work.html</link><description>Recent content in Work on I'm OWenT</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>admin@owent.net (OWenT)</managingEditor><webMaster>admin@owent.net (OWenT)</webMaster><lastBuildDate>Sat, 01 Jul 2017 15:57:29 +0000</lastBuildDate><atom:link href="//owent.net/categories/work/index.xml" rel="self" type="application/rss+xml"/><item><title>libcopp v2的第一波优化完成</title><link>//owent.net/2017/1466.html</link><pubDate>Sat, 01 Jul 2017 15:57:29 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2017/1466.html</guid><description>之前测出来libcopp还有一些列优化点，但是要破坏之前的API，所以整理了一下优化的想法和方案。 预留空间和合并分配 之前有太多的堆内存分配了</description></item><item><title>libcopp(v2) vs goroutine性能测试</title><link>//owent.net/2017/1465.html</link><pubDate>Sat, 10 Jun 2017 15:57:29 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2017/1465.html</guid><description>本来是没想写这个对比。无奈之前和call_in_stack的作者聊了一阵，发现了一些libcopp的改进空间。然后顺便看了新的boost.c</description></item><item><title>libatbus的几个藏得很深的bug</title><link>//owent.net/2017/1411.html</link><pubDate>Sun, 23 Apr 2017 23:48:54 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2017/1411.html</guid><description>在写这篇文章前，我突然想到以前流行了一段时间的服务器面试题：当一个BUG只有几百万分之一的概率会出现，怎么办？这个问题在这个BUG里只是毛毛</description></item><item><title>用cmake交叉编译到iOS和Android</title><link>//owent.net/2017/1405.html</link><pubDate>Sun, 16 Apr 2017 03:37:17 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2017/1405.html</guid><description>最近看了下最新版本的cmake的文档，很惊喜地发现他已经支持直接设置Android和OSX的一些变量了，然后有瞄了一眼NDK，发现里面现在也</description></item><item><title>开源项目得一些小维护</title><link>//owent.net/2017/1373.html</link><pubDate>Fri, 03 Mar 2017 18:20:31 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2017/1373.html</guid><description>其实我那几个特别是工具类得开源项目一致都有维护和更新，但是每次更新得量和要点并不怎么突出所以一致也没写点什么。但是偶尔吗也会碰到一些稍微值得</description></item><item><title>atapp的c binding和c#适配</title><link>//owent.net/2017/1367.html</link><pubDate>Wed, 15 Feb 2017 23:27:51 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2017/1367.html</guid><description>这两天在做服务器框架的C的接口导出和C#的接入。之所以要做这么个东西是因为之前的服务器框架（atsf4g-co）已经完成了通信层面和基本设计</description></item><item><title>对象路由系统设计</title><link>//owent.net/2017/1342.html</link><pubDate>Sat, 04 Feb 2017 19:01:45 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2017/1342.html</guid><description>起源 现在的手游也开始越来越复杂，以前少量交互线上保存的服务器架构越来越不能满足现在越来越偏向PC端MMORPG的需求。比如现在手游也引入了地</description></item><item><title>近期的一个协程流程BUG</title><link>//owent.net/2017/1313.html</link><pubDate>Mon, 02 Jan 2017 23:13:25 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2017/1313.html</guid><description>最近一直没什么时间整理近期碰到的问题，今天思考了一下之前碰到的一个临时处理的BUG，顺便写点东西清理一下思路。 其实严格来说这个BUG更应该是</description></item><item><title>重写了llvm+clang+libc++和libc++abi的构建脚本</title><link>//owent.net/2016/1309.html</link><pubDate>Sat, 19 Nov 2016 15:42:21 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2016/1309.html</guid><description>由于之前整理的服务器框架已经完成了，就需要用各种静态分析工具跑一遍。原来的llvm+clang的编译脚本是从GCC那个脚本copy过来然后改</description></item><item><title>atsf4g完整游戏工程示例</title><link>//owent.net/2016/1306.html</link><pubDate>Sun, 23 Oct 2016 12:31:14 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2016/1306.html</guid><description>近期仍然在搭建完整的游戏服务器架构。基于atsf4g（asynchronously-tree server framework fo game）的完整解决方案终于接近完成。基本</description></item><item><title>atframework基本框架已经完成</title><link>//owent.net/2016/1301.html</link><pubDate>Thu, 22 Sep 2016 17:10:11 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2016/1301.html</guid><description>好久没写blog了。最近空闲时间都在加紧完成atframework框架。总算是搞完了，并且搭建了一个静态介绍页。以后有空慢慢加文档进去。 主页</description></item><item><title>游戏服务器的不停服更新</title><link>//owent.net/2016/1294.html</link><pubDate>Sun, 31 Jul 2016 17:23:34 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2016/1294.html</guid><description>我们目前的游戏第一次测试的时候笔记送匆忙，导致上线之后频繁更新。 比如BOSS战由于大区的人数和预期不一样导致的难度调整，或者是任务链或者数值</description></item><item><title>对atbus的小数据包的优化</title><link>//owent.net/2016/1286.html</link><pubDate>Sat, 09 Jul 2016 14:16:41 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2016/1286.html</guid><description>atbus是我按之前的思路写得服务器消息通信中间件，目标是简化服务器通信的流程，能够自动选择最优路线，自动的断线重连和通信通道维护。能够跨平</description></item><item><title>Android和IOS的TLS问题</title><link>//owent.net/2016/1285.html</link><pubDate>Sat, 09 Jul 2016 14:15:14 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2016/1285.html</guid><description>这个问题起源于以前给客户端写的一个log模块，然后里面为了线程安全且多线程下不互相写乱，并且因为这些系统基本都用比较高版本的编译器，都支持C</description></item><item><title>pbc的一个陈年老BUG</title><link>//owent.net/2016/1273.html</link><pubDate>Mon, 04 Jul 2016 13:01:42 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2016/1273.html</guid><description>近期跟了一下pbc的lua-binding的一个老BUG，起源是我们客户端报了一个奇怪的问题，我们游戏里的某些功能的optional字段，服</description></item><item><title>boost.context-1.61版本的设计模型变化</title><link>//owent.net/2016/1270.html</link><pubDate>Tue, 14 Jun 2016 17:40:29 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2016/1270.html</guid><description>前言 之前写了个C++的协程框架libcopp，底层使用的是boost.context实现，然后剥离了对boost的依赖。然而这样意味着我必须</description></item><item><title>理解Raft算法</title><link>//owent.net/2016/1226.html</link><pubDate>Thu, 17 Mar 2016 21:29:24 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2016/1226.html</guid><description>前言 最近在分布式系统一致性方面，Raft算法比较火啊。所以就抽时间看了下这个算法。 之前已经有Paxos算法，用于解决分布式系统最终一致性问题</description></item><item><title>libatbus基本功能及单元测试终于写完啦</title><link>//owent.net/2016/1214.html</link><pubDate>Fri, 19 Feb 2016 12:44:53 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2016/1214.html</guid><description>libatbus 经过茫茫长时间的编写+过年在家无聊补充和修正单元测试，再加上这两天的整理，终于把以前的这个关于服务器通信中间件的基本功能和相应的单元测试完</description></item><item><title>博客文章和文档迁移到gitbook</title><link>//owent.net/2016/1209.html</link><pubDate>Fri, 15 Jan 2016 20:23:18 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2016/1209.html</guid><description>使用Markdown写blog已经很久了，近期接触并且看了下流传已久的gitbook平台，感觉做得确实不错。、 之前写blog的时候一直用得是</description></item><item><title>给客户端写得LRU缓存</title><link>//owent.net/2016/1206.html</link><pubDate>Mon, 04 Jan 2016 20:23:18 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2016/1206.html</guid><description>前言 由于我们的客户端的元素和资源比较多，cocos框架的各种库质量参差不齐，导致了有些地方加载速度实在很慢。并且没有一个统一的内存管理机制导</description></item><item><title>针对Java JIT的优化(转表工具:xresloader)</title><link>//owent.net/2015/1198.html</link><pubDate>Wed, 02 Sep 2015 20:20:16 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2015/1198.html</guid><description>之前做了一个转Excel表到lua/二进制/json/xml的工具-xresloader。目的一方面是方便策划。另一方面是统一客户端和服务器</description></item><item><title>libcopp更新 (merge boost 1.59 context)</title><link>//owent.net/2015/1194.html</link><pubDate>Mon, 17 Aug 2015 11:43:45 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2015/1194.html</guid><description>libcopp更新 (merge boost 1.59 context) 之前由于兴趣写了一个协程框架，目前这个框架已经投入项目中使用。 这个框架的上下文部分是使用了boost.contex</description></item><item><title>小记最近踩得两个C++坑</title><link>//owent.net/2015/1189.html</link><pubDate>Sat, 25 Jul 2015 14:53:44 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2015/1189.html</guid><description>小记最近踩得两个C++坑 记一下最近踩得两个C++独有的暗坑，其中一个和ABI相关。第二个坑其实之前研究过，但是没有实例，这次算是碰到了个典型</description></item><item><title>Redis全异步(HA)Driver设计稿</title><link>//owent.net/2015/1182.html</link><pubDate>Sat, 04 Jul 2015 22:24:46 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2015/1182.html</guid><description>Redis全异步高可用Driver设计稿 前言 现在Redis的集群功能已经Release。但是并没有一个官方直接提供的高可用性的API可以使用</description></item><item><title>Vim常用命令</title><link>//owent.net/2015/1170.html</link><pubDate>Fri, 08 May 2015 11:21:17 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2015/1170.html</guid><description>之前有搜集过一些常用的命令脚本，其中有vim的部分。但是vim内置的很多功能那些个命令显然是不够的，而且那些记录的很多也不常用，于是想到专门</description></item><item><title>关于firewalld和systemd的一些命令速记</title><link>//owent.net/2015/1160.html</link><pubDate>Thu, 23 Apr 2015 15:55:44 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2015/1160.html</guid><description>前言 CentOS 7 已经用firewalld替换掉了iptables并用systemd来管理启动服务（之前是chkconfig）。而且下一个Ubuntu</description></item><item><title>Jenkins(hudson)插件记录</title><link>//owent.net/2015/1157.html</link><pubDate>Tue, 21 Apr 2015 11:22:59 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2015/1157.html</guid><description>前言 搭建自动化构建（jenkins）的过程中碰到了挺多问题，需要装各种插件解决。为了方便下次部署，这里先记录一下用到的插件及用途 Jenkin</description></item><item><title>我们的Lua类绑定机制</title><link>//owent.net/2015/1153.html</link><pubDate>Wed, 15 Apr 2015 16:16:39 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2015/1153.html</guid><description>前言 最近一个人搞后台，框架底层+逻辑功能茫茫多，扛得比较辛苦，一直没抽出空来写点东西。 空闲的时间，完善了LLVM+Clang+libc++和</description></item><item><title>LLVM+Clang+Libcxx+Libcxxabi（3.6）工具链编译（完成自举编译）</title><link>//owent.net/2015/1149.html</link><pubDate>Wed, 08 Apr 2015 17:41:02 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2015/1149.html</guid><description>LLVM和Clang工具链的生成配置文件写得比较搓，所以略微麻烦，另外这个脚本没有经过多环境测试，不保证在其他Linux发行版里正常使用。 CHANGE</description></item><item><title>Android NDK undefined reference to ___tls_get_addr 错误</title><link>//owent.net/2015/1140.html</link><pubDate>Fri, 06 Feb 2015 20:27:16 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2015/1140.html</guid><description>本来看到Android的ndk都开始用gcc4.8和gcc4.9了，而且gcc4.8.1开始支持全部的c++11的特性，我就很happy地用</description></item><item><title>tolua++内存释放坑</title><link>//owent.net/2015/1133.html</link><pubDate>Thu, 08 Jan 2015 22:03:42 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2015/1133.html</guid><description>前言 本来想参考下tolua++的对象生命周期维护方式。一不小心发现了一个坑。 代码追踪 我这里用得是tolua++ 1.0.93版本。 tolua+</description></item><item><title>Lua性能分析</title><link>//owent.net/2014/1128.html</link><pubDate>Fri, 12 Dec 2014 16:14:11 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2014/1128.html</guid><description>前言 Lua性能分析本来有一些现成的工具，比如LuaProfile，不幸的是这货不支持luajit，另外LuaStudio虽然挺好用但是是收费</description></item><item><title>集成Qt Webkit 到cocos2d-x</title><link>//owent.net/2014/1120.html</link><pubDate>Tue, 02 Dec 2014 15:00:55 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2014/1120.html</guid><description>前言 近期倒腾下客户端，想搞个cocos2d的工具。 之前的那个集成到Win32工具下的调试辅助工具是直接用的windows api。拓展起来巨麻</description></item><item><title>Gitlab环境搭建小计</title><link>//owent.net/2014/1110.html</link><pubDate>Mon, 20 Oct 2014 11:13:43 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2014/1110.html</guid><description>最近给公司搭建Gitlab作源代码管理工具 满满都是坑呐。 Gitlab 开源仓库软件包官方地址: https://about.gitlab.com/ https://about.gitlab.com/downloads/ 这里有各个Linux分支的安装包，下面的说明笔记齐全，</description></item><item><title>近期研究VPN的一些记录(OpenVPN,pptp,l2tp)</title><link>//owent.net/2014/1105.html</link><pubDate>Sun, 28 Sep 2014 20:36:46 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2014/1105.html</guid><description>近期由于一些需要（特别是上Google），研究了下在VPS上搭建VPN服务器的方法。其中遇到一些坑，顺带记下来以备下次使用。 其实在有VPS的</description></item><item><title>LLVM + Clang + Libcxx + Libcxxabi 工具链编译</title><link>//owent.net/2014/1101.html</link><pubDate>Fri, 12 Sep 2014 19:07:03 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2014/1101.html</guid><description>LLVM和Clang工具链的生成配置文件写得比较搓，所以略微麻烦，另外这个脚本没有经过多环境测试，不保证在其他Linux发行版里正常使用。 如</description></item><item><title>[libiniloader] Project</title><link>//owent.net/2014/1081.html</link><pubDate>Mon, 14 Jul 2014 19:28:49 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2014/1081.html</guid><description>INI 配置读取库发布 Github地址: https://github.com/owt5008137/libiniloader OSChina镜像: http://git.oschina.net/owent/libiniloader 项目中经常会碰到需要读取配置的情况，而用ini配置最大的优势就是简单易懂。 但是现在</description></item><item><title>[WP Code Highlight.js] Project</title><link>//owent.net/2014/1066.html</link><pubDate>Thu, 12 Jun 2014 20:39:11 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2014/1066.html</guid><description>Project Information Project Name: WP Code Highlight.js1
Github Home: https://github.com/owt5008137/WP-Code-Highlight.js
Plugin Home: http://wordpress.org/plugins/wp-code-highlightjs/
Description: This is a plugin of Wordpress using Highlight.js2 to make codes on posts, articles or any web pages more beautiful and easier to read.
This plugin allow you to load Highlight.js from local web server or some of public CDN we collected.
To make you easier to migrate from SyntaxHilighter and Google Prettify to Highlight.js, this plugin will provide some compatible mode so that you need not to change any code on your old web pages.</description></item><item><title>基于Chrome插件的开发工具链</title><link>//owent.net/2014/1054.html</link><pubDate>Tue, 06 May 2014 21:51:58 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2014/1054.html</guid><description>在项目开发过程中，时不时会碰上需要使用一些工具来做一些自动操作或者附加功能。特别是有一些外部组件只会提供Web工具，或者如果产品会发布在We</description></item><item><title>Linux 编译安装 GCC 4.9</title><link>//owent.net/2014/1038.html</link><pubDate>Wed, 23 Apr 2014 14:37:46 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2014/1038.html</guid><description>详情及变更请参照: Linux 编译安装 GCC 4.9 GCC4.9发布啦，本脚本在之前4.8的基础上做了稍许改进，更新 PS：4.9.0 开始支持C++1y特性 GCC 4.9 的</description></item><item><title>捣鼓一个协程库</title><link>//owent.net/2014/1000.html</link><pubDate>Wed, 05 Mar 2014 21:52:49 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2014/1000.html</guid><description>今年准备安安心心写一个协程库。一方面是觉得协程挺有意思，另一方面也是因为C/C++在这方面没有一个非常权威的解决方案。 按照我自己风格还是喜欢</description></item><item><title>ARM 交叉编译环境搭建</title><link>//owent.net/2013/738.html</link><pubDate>Thu, 11 Apr 2013 17:55:04 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2013/738.html</guid><description>最近研究了一下ARM的交叉编译环境搭建，太麻烦了必须作一下记录啊。 前两个方法比较简单一点，关键是淫家Google帮你弄好了大部分功能 方案一：</description></item><item><title>Boost.Spirit 初体验</title><link>//owent.net/2012/674.html</link><pubDate>Thu, 08 Nov 2012 18:57:34 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2012/674.html</guid><description>使用代码生成代码是一件十分美妙的事情，于是有了各种代码生成器。但是生成代码，意味着要有对生成规则的分析和处理。 Boost.Spirit 就是这么一个语法分析工具，它</description></item><item><title>AC自动机</title><link>//owent.net/2012/652.html</link><pubDate>Tue, 28 Aug 2012 20:10:27 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2012/652.html</guid><description>某个课程的作业，促使我来看看这玩意。 整个程序的算法思想是看别人的ACM的blog看懂的，感觉确实和KMP很像。但是代码呢就比较工程化一点。顺</description></item><item><title>C++ 标准过渡期</title><link>//owent.net/2012/643.html</link><pubDate>Thu, 23 Aug 2012 06:05:20 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2012/643.html</guid><description>C++11的新标准已经出台，各个编译器已经开始陆续支持。 主流编译器支持程度见(VC++, gcc, clang, intel c++等)：http://en.cpprefe</description></item><item><title>C++ 新特性学习（七） — 右值引用</title><link>//owent.net/2012/603.html</link><pubDate>Thu, 31 May 2012 04:50:21 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2012/603.html</guid><description>C++在效率上有个硬伤。我们知道C#和Java对于类传递都是以引用的方式，而C++默认都是传值。在传值过程中就经常会进行复制构造，这完全没必</description></item><item><title>Linux编译安装GCC 4.7</title><link>//owent.net/2012/584.html</link><pubDate>Sat, 07 Apr 2012 10:25:18 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2012/584.html</guid><description>Linux编译安装GCC 4.7 详见: Linux编译安装GCC 4.7 准备环境及依赖项 支持 ISO C90 的编译器 用于创建Ada编译器的GNAT 支持POSIX的sh</description></item><item><title>JSON显示库 -- showJson （Javascript）</title><link>//owent.net/2012/573.html</link><pubDate>Sun, 01 Apr 2012 06:17:48 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2012/573.html</guid><description>现在的web的js开发很方便啊，但是碰到iframe里的东西还是不方便看到变量的内容，所以就写了这么个看json内容的玩意，还可以当控制台输</description></item><item><title>JQuery扩展插件--提示信息</title><link>//owent.net/2010/128.html</link><pubDate>Fri, 19 Nov 2010 15:20:12 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2010/128.html</guid><description>学校做项目顺便写的，还是有点用的。 /*** * JQuery扩展插件--提示信息 * * 本函数用于创建提示信息 * * Example * &amp;lt;code&amp;gt; * var t = $.noticeMessage(msg, a, b); * &amp;lt;/code&amp;gt; * * * function noticeMessage([msg, a,b]) * @Param</description></item><item><title>解析网站字符串型参数 Javascript QueryString 操作 TQueryString类</title><link>//owent.net/2010/104.html</link><pubDate>Mon, 01 Nov 2010 02:15:09 +0000</pubDate><author>admin@owent.net (OWenT)</author><guid>//owent.net/2010/104.html</guid><description>这是学校USRP项目需要而写的一个类，但是既然写出来了，以后也可能用到，就共享出来吧。 这个类用于解析网页URL的QueryString参数，</description></item></channel></rss>